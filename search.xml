<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Unity Navigation</title>
      <link href="/2022/04/25/unity-navigation/"/>
      <url>/2022/04/25/unity-navigation/</url>
      
        <content type="html"><![CDATA[<h2 id="自动寻路的配置"><a href="#自动寻路的配置" class="headerlink" title="自动寻路的配置"></a>自动寻路的配置</h2><ol><li><p>为路上的地面和障碍物勾选好好static<br><img src="https://img-blog.csdnimg.cn/d36df22e41ac40d0a533f60b0cf41cba.png" alt="请添加图片描述"></p></li><li><p>在导航面板出烘焙<br><img src="https://img-blog.csdnimg.cn/246fd91672304e198eeae4a12f61d736.png" alt="在这里插入图片描述"></p></li><li><p>玩家身上挂载代理组件<br><img src="https://img-blog.csdnimg.cn/abff453a20734f5aa13b023a8197ff84.png" alt="在这里插入图片描述"></p></li><li><p>烘焙完成<br><img src="https://img-blog.csdnimg.cn/5fedfa92d28e42db9d0c7ebd5151c5fc.png" alt="在这里插入图片描述"></p></li></ol><p>其中Navigation static是一般障碍物的，下面那个Off Mesh Link Generation是可跳跃的地面勾选的这样才能在可跳跃面板搜到他。</p><h2 id="部分代码实现"><a href="#部分代码实现" class="headerlink" title="部分代码实现"></a>部分代码实现</h2><p>玩家类挂在玩家身上</p><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">UnityEngine</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">UnityEngine<span class="token punctuation">.</span>AI</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">NavMeshAgent</span> agent<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">LineRenderer</span> lineRender<span class="token punctuation">;</span>    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        agent <span class="token operator">=</span> transform<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>NavMeshAgent<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lineRender <span class="token operator">=</span> transform<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>LineRenderer<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>agent<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            Debug<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span><span class="token string">"未找到代理！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">DrawLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MoveToTarget</span><span class="token punctuation">(</span><span class="token class-name">Vector3</span> tar<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        agent<span class="token punctuation">.</span><span class="token function">SetDestination</span><span class="token punctuation">(</span>tar<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DrawLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>lineRender<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment">//在外面给该物体身上挂载一个LineRender组件</span>        <span class="token punctuation">{</span>            lineRender<span class="token punctuation">.</span>positionCount <span class="token operator">=</span> agent<span class="token punctuation">.</span>path<span class="token punctuation">.</span>corners<span class="token punctuation">.</span>Length<span class="token punctuation">;</span>            lineRender<span class="token punctuation">.</span><span class="token function">SetPositions</span><span class="token punctuation">(</span>agent<span class="token punctuation">.</span>path<span class="token punctuation">.</span>corners<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>挂在其他物体上控制玩家的代码</p><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">UnityEngine</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PlayerController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">Player</span> currentAgent<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">RaycastHit</span> hit<span class="token punctuation">;</span>        <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Input<span class="token punctuation">.</span><span class="token function">GetMouseButton</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Physics<span class="token punctuation">.</span><span class="token function">Raycast</span><span class="token punctuation">(</span>Camera<span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">ScreenPointToRay</span><span class="token punctuation">(</span>Input<span class="token punctuation">.</span>mousePosition<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">out</span> hit<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>currentAgent<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    currentAgent<span class="token punctuation">.</span><span class="token function">MoveToTarget</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此处只做出了移动，跳跃和爬楼梯可以去B站看<a href="https://www.bilibili.com/video/BV1wo4y1o7Wm?p=1">视频</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>unity及cSharp学记笔记</title>
      <link href="/2022/04/15/unity-ji-csharp-xue-ji-bi-ji/"/>
      <url>/2022/04/15/unity-ji-csharp-xue-ji-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">TOC</a></p><blockquote><h2 id="1-设计模式六大原则"><a href="#1-设计模式六大原则" class="headerlink" title="1.设计模式六大原则"></a>1.设计模式六大原则</h2><p><strong>1.单一职责原则</strong><br>单一职责原则是实现高内聚、低耦合的指导方针，保持类中职责单一，方便拓展。<br><strong>2.开发封闭原则</strong><br>指对拓展开放，对修改封闭，使程序更好的更新他的功能。<br><strong>3.里氏替换原则</strong><br>所有的基类都能透明的使用其子类。<br>扩充:保持基类与子类的字段与方法一致可以使其用基类完美的使用子类实现多态，<br>如果子类有属于自己的独特方法，则需实例化子类而不是通过基类实例化。<br><strong>4.依赖倒转原则</strong><br>抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。<br><strong>5.迪米特原则</strong><br>一个类与另一个类发生联系使用第三个类进行沟通，减少类与类之间的聚合。<br><strong>6.合成聚合复用原则</strong><br>能使用聚合就不去使用继承，提高代码的复用和灵活性。<br><em><strong>总结：六大原则都是为了“弱耦合，强聚合”服务。</strong></em></p><h2 id="2-好用的单例模式"><a href="#2-好用的单例模式" class="headerlink" title="2.好用的单例模式"></a>2.好用的单例模式</h2></blockquote><p> 对于unity中的场景切换，我们经常会需要使用一些切换场景后依旧可以使用甚至是从其他场景<br> 继承过来变量的值，这时可以使用函数</p><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token function">DontDestroyOnLoad</span><span class="token punctuation">(</span><span class="token class-name">Object</span> Target<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//切换场景时不会被清除</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使变量唯一便可使用单例模式，代码如下:</p><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">GameManager</span> Instance<span class="token punctuation">;</span><span class="token comment">//单例模式只让存在一个</span><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Awake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//在启动时检查</span><span class="token punctuation">{</span>    <span class="token function">CheckGameobject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">CheckSingle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CheckGameobject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//删掉tag不是GM的Gamemanger</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag<span class="token operator">==</span><span class="token string">"GM"</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">Destroy</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CheckSingle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//删掉多余的GameManager</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Instance<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        Instance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token function">DontDestroyOnLoad</span><span class="token punctuation">(</span>gameObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">Destroy</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h2 id="3-unity粒子效果的使用"><a href="#3-unity粒子效果的使用" class="headerlink" title="3.unity粒子效果的使用"></a>3.unity粒子效果的使用</h2><p>1.细节提示<br><img src="https://img-blog.csdnimg.cn/af82bea603fd4ebb9beb275e3dd7bf96.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>1处调小可以使图标变小（例如摄像机图标）<br>2处可以不显示边框<br>一，最主要的设置界面<br><img src="https://img-blog.csdnimg.cn/c72aa9f48a6848d99375f12e56419000.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_7,color_FFFFFF,t_70,g_se,x_16#pic_center"><br>Duration 为粒子效果的持续时间<br>Looping 为是否循环<br>Start 为单个粒子的生命周期（可以存在的时间）<br>Start Speed 为粒子开始时的速度 为0可以让粒子停留在原处<br>Max Particals 为生成的最大粒子数<br>二，Render（渲染，着色）<br><img src="https://img-blog.csdnimg.cn/72b88b4ae5974c308da501d1b2919c0e.png#pic_center" alt="在这里插入图片描述"><br>放入材质球可以让粒子改变样式，像什么光阵之类的都能更改<br>三，随着时间使粒子变化大小<br><img src="https://img-blog.csdnimg.cn/549df0eb68cb403aa6fc44b44903b333.png#pic_center" alt="在这里插入图片描述"><br>调节曲线来实现大小的变换</p></blockquote><blockquote><h2 id="4-拓展Tarnsform使用深度优先算法"><a href="#4-拓展Tarnsform使用深度优先算法" class="headerlink" title="4.拓展Tarnsform使用深度优先算法"></a>4.拓展Tarnsform使用深度优先算法</h2><p>代码如下：</p></blockquote><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Transform</span> <span class="token function">DeepFind</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">Transform</span> parent<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> TargetName<span class="token punctuation">)</span><span class="token comment">//深度优先查找</span>   <span class="token punctuation">{</span>       <span class="token class-name">Transform</span> TeamTransform <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>       <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">Transform</span> child <span class="token keyword">in</span> parent<span class="token punctuation">)</span>       <span class="token punctuation">{</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>name<span class="token operator">==</span>TargetName<span class="token punctuation">)</span>           <span class="token punctuation">{</span>               <span class="token keyword">return</span> child<span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token keyword">else</span>           <span class="token punctuation">{</span>               TeamTransform <span class="token operator">=</span> <span class="token function">DeepFind</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span>TargetName<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span>TeamTransform<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>               <span class="token punctuation">{</span>                   <span class="token keyword">return</span> TeamTransform<span class="token punctuation">;</span>               <span class="token punctuation">}</span>           <span class="token punctuation">}</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用方法如下代码所示：</p><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token class-name">GameObject</span> WHR<span class="token punctuation">;</span>  WHR <span class="token operator">=</span> transform<span class="token punctuation">.</span><span class="token function">DeepFind</span><span class="token punctuation">(</span><span class="token string">"WeaponHandleR"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gameObject<span class="token punctuation">;</span><span class="token comment">//以自身作为父物体往下面找weaponHandleR</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><h2 id="5-this的拓展作用"><a href="#5-this的拓展作用" class="headerlink" title="5.this的拓展作用"></a>5.this的拓展作用</h2><p>代码依旧为上一个代码，</p></blockquote><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Helper</span> <span class="token punctuation">{</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetSex</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">Person</span> item<span class="token punctuation">)</span>     <span class="token punctuation">{</span>         <span class="token keyword">return</span> item<span class="token punctuation">.</span>Sex<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token comment">//调用：</span><span class="token class-name">Person</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> person<span class="token punctuation">.</span><span class="token function">GetSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gcd最大公约数</title>
      <link href="/2022/04/15/gcd-zui-da-gong-yue-shu/"/>
      <url>/2022/04/15/gcd-zui-da-gong-yue-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="gcd函数"><a href="#gcd函数" class="headerlink" title="gcd函数"></a>gcd函数</h1><blockquote><p><em><strong>10进制取gcd</strong></em></p></blockquote><p>首先来个简单的gcd函数（递归的），应该一看就懂，这边就不讲了。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">gcd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token operator">%</span>b<span class="token operator">==</span><span class="token number">0</span><span class="token operator">?</span>b<span class="token operator">:</span><span class="token function">gcd</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>a<span class="token operator">%</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>下面是优化，跟上面原理差不多，但是复杂度低一点。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">gcd</span><span class="token punctuation">(</span> <span class="token keyword">int</span> a <span class="token punctuation">,</span> <span class="token keyword">int</span> b <span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> b <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> a <span class="token operator">:</span> <span class="token function">gcd</span><span class="token punctuation">(</span> b <span class="token punctuation">,</span> a<span class="token operator">%</span>b <span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><em><strong>二进制取gcd</strong></em><br>从王玉大佬那学的,要是连王玉大佬都不知道，那你就是白学了QAQ</p></blockquote><p>首先引入一个概念，“^”符号，是把一个十进制数，按位取异或。<br>举个栗子；<br>                 5   二进制为00101<br>                  9   二进制为01001<br>                   取异或以后为01100<br>                   为12<br>                   下面是用二进制将两数交换，属于快进快读，因为二进制算的比十进制快。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span> <span class="token keyword">int</span> <span class="token operator">&amp;</span>a <span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">&amp;</span>b <span class="token punctuation">)</span> <span class="token punctuation">{</span>    a<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span>    b<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span>    a<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后用这个进行运算gcd函数</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">gcd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">while</span><span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token operator">^</span>a<span class="token operator">=</span><span class="token operator">^</span>b<span class="token operator">^=</span>a<span class="token operator">%=</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> a<span class="token punctuation">;</span><span class="token comment">//先取a和b的余数，再用二进制交换的法则进行</span><span class="token comment">//和前面十进制的运算法则是一样的</span><span class="token comment">//返回a是因为a%b==0但是a和b交换了，所以返回a的值等于返回之前b的值</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> 算法 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>错排兼排列组合公式</title>
      <link href="/2022/04/15/cuo-pai-jian-pai-lie-zu-he-gong-shi/"/>
      <url>/2022/04/15/cuo-pai-jian-pai-lie-zu-he-gong-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="错排"><a href="#错排" class="headerlink" title="错排"></a>错排</h1><p><strong>&gt; 概念</strong></p><p>首先引进一个概念，什么是错排；<br>错排就是讲一个有顺序的数组，其中的每个数，排列后不在原本的位置。<br>例如 1  2  3  4  5<br>其中1不能放在第一个地方，2不能放在第二个地方，以此类推。<br>这里有张图给你理解接下来要给出的公式<br>如果想更好理解的话这里有个链接<br><a href="https://blog.csdn.net/RIPKEY/article/details/115471365">黑谷小健</a>                          莫哥yyds<br><img src="https://img-blog.csdnimg.cn/20210415211107909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzU0NzU2NTkx,size_16,color_FFFFFF,t_70#pic_center"></p><blockquote><p>公式</p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>          dp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//因为前两个要预存所以从三开始</span>        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于错排我们运用公式就行</p><blockquote><p>组合的计算</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210415211544927.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210415211640663.png" alt="在这里插入图片描述"><br>所以我们可以算n，m，n-m的阶乘来求</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> mo<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>zi<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>z2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>z3<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//这是n的阶乘</span>                   mo<span class="token operator">*=</span>i<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token punctuation">(</span>n<span class="token operator">-</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//n-m的阶乘</span>                   z2<span class="token operator">*=</span>i<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//m的阶乘</span>                    z3<span class="token operator">*=</span>i<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这是一道错排题（统计学生成绩的）</p></blockquote><p>题目大意，给定一个学生数，有n名学生，1≤n≤15，克总讲所有学生的成绩排名统计错了</p><p>我们可以假设正确顺序为1 2 3 ……，或者任意顺序来进行错排。<br>代码如下</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">0x3f3f3f3f</span></span></span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">bug</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">)</span> cout<span class="token operator">&lt;&lt;</span>endl<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ll n<span class="token punctuation">;</span>    cin<span class="token operator">&gt;&gt;</span>n<span class="token punctuation">;</span>    ll dis<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    dis<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    dis<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    dis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>dis<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">+</span>dis<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span>dis<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输入<br>3<br>输出<br>2</p><p>n=3时，有两种情况：<br>3 1 2<br>2 3 1</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赫夫曼树（最优二叉树）</title>
      <link href="/2022/04/15/he-fu-man-shu-zui-you-er-cha-shu/"/>
      <url>/2022/04/15/he-fu-man-shu-zui-you-er-cha-shu/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="赫夫曼树介绍"><a href="#赫夫曼树介绍" class="headerlink" title="赫夫曼树介绍"></a>赫夫曼树介绍</h1><p><strong>概念</strong><br>赫夫曼树是最优二叉树的别名，他通过每个叶子节点算权值和，取最小权值和的那棵树便是哈夫曼树。<br><strong>如何实现</strong><br>将所有数排成一个数组内，找到其质量（他的价值）最小的两个，将其合成一颗树，左边是最小的，右边是第二小的，然后将其质量相加便是这颗新树的质量。然后再次搜索，找到质量最小的两个，一直往复直到只剩下一棵树，那便是哈夫曼树。</p></blockquote><p><strong>代码如下：</strong></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iomanip&gt;</span><span class="token comment">//这是输出格式的头文件</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">bug</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">bugg</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">buggg</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>c<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">endl</span> <span class="token char">'\n'</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">0x3f3f3f</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> M <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">node</span><span class="token punctuation">{</span><span class="token keyword">int</span> wei<span class="token punctuation">;</span><span class="token keyword">int</span> fa<span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">;</span><span class="token keyword">char</span><span class="token operator">*</span> code<span class="token punctuation">;</span><span class="token punctuation">}</span>banode<span class="token punctuation">,</span> <span class="token operator">*</span> bitree<span class="token punctuation">;</span><span class="token comment">//创建这个数组的结构体指针方便运用</span><span class="token keyword">void</span> <span class="token function">mi</span><span class="token punctuation">(</span>bitree<span class="token operator">&amp;</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&amp;</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&amp;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//将这个数组和已经运算到的长度（注：是会随着你的运算增大不是不变的）</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">;</span><span class="token comment">//还有最小的两个值通过引用变量来带出</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//这里不能等于n，因为n是我们要得到值的位置，现在还是没有值的</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//找到第一个没父母节点的</span>a <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token comment">//将其坐标赋值给a</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">&lt;</span> s<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span>wei<span class="token punctuation">)</span>a <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token comment">//然后搜索最小的质量并将其坐标赋值给a</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> k <span class="token operator">!=</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//与之前一样找到第一个没父母节点的</span>b <span class="token operator">=</span> k<span class="token punctuation">;</span><span class="token comment">//并将其坐标赋值给b</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">&lt;</span> s<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">&amp;&amp;</span> k <span class="token operator">!=</span> a<span class="token punctuation">)</span>b <span class="token operator">=</span> k<span class="token punctuation">;</span><span class="token comment">//找到除坐标等于a的外最小的位置</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">hfm</span><span class="token punctuation">(</span>bitree<span class="token operator">&amp;</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//将要建立的哈夫曼树的数组和初始数组以及长度放进去</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">*</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//因为从一开始所以可以赋值为0</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//输入质量</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">*</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//下面是哈夫曼树的判断之前讲了</span><span class="token keyword">int</span> mil<span class="token punctuation">,</span> mir<span class="token punctuation">;</span><span class="token function">mi</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">,</span> mil<span class="token punctuation">,</span> mir<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">[</span>mil<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">=</span> i<span class="token punctuation">;</span>s<span class="token punctuation">[</span>mir<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">=</span> i<span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">=</span> mil<span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">=</span> mir<span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">=</span> s<span class="token punctuation">[</span>mil<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">+</span> s<span class="token punctuation">[</span>mir<span class="token punctuation">]</span><span class="token punctuation">.</span>wei<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">out</span><span class="token punctuation">(</span>bitree s<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">int</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"位置  质量  父母节点  左孩子  右孩子    赫夫曼编码"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> left<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> t<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span><span class="token comment">//这个节点所在位置</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span><span class="token comment">//输出其质量</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span><span class="token comment">//父母节点位置</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span><span class="token comment">//左孩子位置</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token punctuation">;</span><span class="token comment">//输出右孩子位置</span><span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>code<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"无赫夫曼编码"</span><span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">pre</span><span class="token punctuation">(</span>bitree s<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//将赫夫曼编码弄出来</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>code <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>fa<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>fa<span class="token punctuation">]</span><span class="token punctuation">.</span>l<span class="token operator">==</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>如果父母节点的左孩子坐标等于这个坐标，那就是左孩子s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>code<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'0'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>code<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'1'</span><span class="token punctuation">;</span>j <span class="token operator">=</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>fa<span class="token punctuation">;</span><span class="token punctuation">}</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>code<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>bitree s<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"输入数组长度："</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"输入赫夫曼数的数组:"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//下面的有2n-1个</span>s <span class="token operator">=</span> <span class="token keyword">new</span> banode<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//创建空间，记得多创一个因为我们这个是从1开始的</span><span class="token function">hfm</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">pre</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">out</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>测试数据：</strong><br>8<br>5 29 7 8 14 23 3 11<br><strong>输出：</strong></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">输入数组长度：<span class="token number">8</span>输入赫夫曼数的数组<span class="token operator">:</span><span class="token number">5</span> <span class="token number">29</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">14</span> <span class="token number">23</span> <span class="token number">3</span> <span class="token number">11</span>位置  质量  父母节点  左孩子  右孩子    赫夫曼编码<span class="token number">1</span>     <span class="token number">5</span>       <span class="token number">9</span>       <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">0001</span><span class="token number">2</span>     <span class="token number">29</span>      <span class="token number">14</span>      <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">10</span><span class="token number">3</span>     <span class="token number">7</span>       <span class="token number">10</span>      <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">1110</span><span class="token number">4</span>     <span class="token number">8</span>       <span class="token number">10</span>      <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">1111</span><span class="token number">5</span>     <span class="token number">14</span>      <span class="token number">12</span>      <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">110</span><span class="token number">6</span>     <span class="token number">23</span>      <span class="token number">13</span>      <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">01</span><span class="token number">7</span>     <span class="token number">3</span>       <span class="token number">9</span>       <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">0000</span><span class="token number">8</span>     <span class="token number">11</span>      <span class="token number">11</span>      <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">001</span><span class="token number">9</span>     <span class="token number">8</span>       <span class="token number">11</span>      <span class="token number">7</span>       <span class="token number">1</span>         无赫夫曼编码<span class="token number">10</span>    <span class="token number">15</span>      <span class="token number">12</span>      <span class="token number">3</span>       <span class="token number">4</span>         无赫夫曼编码<span class="token number">11</span>    <span class="token number">19</span>      <span class="token number">13</span>      <span class="token number">9</span>       <span class="token number">8</span>         无赫夫曼编码<span class="token number">12</span>    <span class="token number">29</span>      <span class="token number">14</span>      <span class="token number">5</span>       <span class="token number">10</span>        无赫夫曼编码<span class="token number">13</span>    <span class="token number">42</span>      <span class="token number">15</span>      <span class="token number">11</span>      <span class="token number">6</span>         无赫夫曼编码<span class="token number">14</span>    <span class="token number">58</span>      <span class="token number">15</span>      <span class="token number">2</span>       <span class="token number">12</span>        无赫夫曼编码<span class="token number">15</span>    <span class="token number">100</span>     <span class="token number">0</span>       <span class="token number">13</span>      <span class="token number">14</span>        无赫夫曼编码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>给个链接——&gt;<a href="https://www.cnblogs.com/smile233/p/8184492.html">我是在这学的</a></p><blockquote><h1 id="给道例题"><a href="#给道例题" class="headerlink" title="给道例题"></a>给道例题</h1><p>题目打出来不好看就直接给链接了<br>—-&gt;<a href="https://www.luogu.com.cn/problem/P1090">摘果子（洛谷）</a><br>就是要我们求搬运的和的最小，就是权的和。<br>不过我一开始不是那么想的，我想的是除了根节点以外所有节点的和，结果答案是对的，相当于说明了这个也可以求出权值。<br><strong>下面是代码</strong>（跟之前的代码基本没区别，但是为了记忆这边建议重新手敲一遍，不然忘贼快）</p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iomanip&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">bug</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">bugg</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">buggg</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>c<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">endl</span> <span class="token char">'\n'</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">0x3f3f3f</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> M <span class="token operator">=</span> <span class="token number">10005</span><span class="token punctuation">;</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span><span class="token keyword">int</span> wei<span class="token punctuation">;</span><span class="token keyword">int</span> fa<span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">;</span><span class="token punctuation">}</span>tree<span class="token punctuation">,</span><span class="token operator">*</span>bitree<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">mi</span><span class="token punctuation">(</span>bitree s<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>a<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>a <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">&lt;</span> s<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span>wei<span class="token punctuation">)</span>a <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">!=</span> a<span class="token punctuation">)</span>b <span class="token operator">=</span> j<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">!=</span> a <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">&lt;</span> s<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">.</span>wei<span class="token punctuation">)</span>b <span class="token operator">=</span> j<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">hfm</span><span class="token punctuation">(</span>bitree<span class="token operator">&amp;</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">*</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> ml<span class="token punctuation">,</span> mr<span class="token punctuation">;</span><span class="token function">mi</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">,</span> ml<span class="token punctuation">,</span> mr<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">[</span>ml<span class="token punctuation">]</span><span class="token punctuation">.</span>fa <span class="token operator">=</span> i<span class="token punctuation">;</span>s<span class="token punctuation">[</span>mr<span class="token punctuation">]</span><span class="token punctuation">.</span> fa <span class="token operator">=</span> i<span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">=</span> ml<span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">=</span> mr<span class="token punctuation">;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">=</span> s<span class="token punctuation">[</span>ml<span class="token punctuation">]</span><span class="token punctuation">.</span>wei <span class="token operator">+</span> s<span class="token punctuation">[</span>mr<span class="token punctuation">]</span><span class="token punctuation">.</span>wei<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>bitree s<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">,</span>ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>ans <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span>s <span class="token operator">=</span> <span class="token keyword">new</span> tree<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">hfm</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">*</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>ans <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>wei<span class="token punctuation">;</span><span class="token punctuation">}</span>cout <span class="token operator">&lt;&lt;</span> ans <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全排列（超简单递归）</title>
      <link href="/2022/04/15/quan-pai-lie-chao-jian-dan-di-gui/"/>
      <url>/2022/04/15/quan-pai-lie-chao-jian-dan-di-gui/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="将n个数进行全排列"><a href="#将n个数进行全排列" class="headerlink" title="将n个数进行全排列"></a>将n个数进行全排列</h1><p>话不多说，直接给代码：</p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">bug</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">bugg</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">buggg</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span class="token punctuation">(</span>cout<span class="token operator">&lt;&lt;</span></span><span class="token string">"*"</span><span class="token expression"><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span></span><span class="token char">' '</span><span class="token expression"><span class="token operator">&lt;&lt;</span>c<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">endl</span> <span class="token char">'\n'</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">0x3f3f3f</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> M <span class="token operator">=</span> <span class="token number">5000</span><span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">bool</span> arr<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">pre</span><span class="token punctuation">(</span><span class="token keyword">int</span> pos<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">==</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>cout <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>a<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token function">pre</span><span class="token punctuation">(</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span><span class="token function">pre</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉树的非递归调用</title>
      <link href="/2022/04/15/er-cha-shu-de-fei-di-gui-diao-yong/"/>
      <url>/2022/04/15/er-cha-shu-de-fei-di-gui-diao-yong/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84">TOC</a></p><blockquote><h1 id="前序遍历"><a href="#前序遍历" class="headerlink" title="前序遍历"></a>前序遍历</h1><p>将左边孩子全放进栈并输出，遇到空的就访问栈的头节点的右孩子（如此往复直到找到有右孩子的节点。）<br><strong>代码如下：</strong></p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">presq</span><span class="token punctuation">(</span>bitree s<span class="token punctuation">)</span> <span class="token punctuation">{</span>stack<span class="token operator">&lt;</span>bitree<span class="token operator">&gt;</span> t<span class="token punctuation">;</span>bitree v<span class="token punctuation">;</span>bitree k<span class="token punctuation">;</span>v <span class="token operator">=</span> s<span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>v<span class="token operator">||</span><span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> v<span class="token operator">-&gt;</span>e<span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>v <span class="token operator">=</span> v<span class="token operator">-&gt;</span>l<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>v <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>r<span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h1 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h1><p>将左孩子全入栈（不输出），遇到空就将其输出并将头节点的右孩子赋值为下一个节点然后弹出头节点。<br><strong>代码如下</strong></p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">midsq</span><span class="token punctuation">(</span>bitree s<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//中序遍历</span>stack<span class="token operator">&lt;</span>bitree<span class="token operator">&gt;</span> t<span class="token punctuation">;</span>bitree v<span class="token punctuation">;</span>v <span class="token operator">=</span> s<span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>v <span class="token operator">||</span> <span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> v <span class="token operator">=</span> v<span class="token operator">-&gt;</span>l<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> t<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>e<span class="token punctuation">;</span>v <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>r<span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h1 id="后序遍历"><a href="#后序遍历" class="headerlink" title="后序遍历"></a>后序遍历</h1><p>这个就比较复杂了，先将根节点放进栈，然后判断其左右孩子是否存在，要是都不存在，则输出或者其左孩子或右孩子是上个栈里面的节点，也输出，否则就将其右孩子和左孩子分别入栈。<br><strong>代码如下</strong></p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">forsq</span><span class="token punctuation">(</span>bitree s<span class="token punctuation">)</span> <span class="token punctuation">{</span>stack<span class="token operator">&lt;</span>bitree<span class="token operator">&gt;</span> t<span class="token punctuation">;</span>bitree v<span class="token punctuation">,</span>c<span class="token punctuation">;</span>c <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>v <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>v<span class="token operator">-&gt;</span>l <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>v<span class="token operator">-&gt;</span>r<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token constant">NULL</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>v<span class="token operator">-&gt;</span>l <span class="token operator">==</span> c <span class="token operator">||</span>v<span class="token operator">-&gt;</span>r <span class="token operator">==</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> v<span class="token operator">-&gt;</span>e<span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c <span class="token operator">=</span> v<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>v<span class="token operator">-&gt;</span>r<span class="token punctuation">)</span>t<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token operator">-&gt;</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>v<span class="token operator">-&gt;</span>l<span class="token punctuation">)</span>t<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token operator">-&gt;</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h1 id="树的高度"><a href="#树的高度" class="headerlink" title="树的高度"></a>树的高度</h1><p><strong>直接给代码，自己体会。。。。</strong></p></blockquote><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">hight</span><span class="token punctuation">(</span>bitree s<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&amp;</span> ans2<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token operator">-&gt;</span>l <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>s<span class="token operator">-&gt;</span>r<span class="token punctuation">)</span>ans2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> r<span class="token punctuation">;</span><span class="token function">hight</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>l<span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">hight</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>r<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;</span> r<span class="token punctuation">)</span>ans2 <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">else</span> ans2 <span class="token operator">=</span> r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> ans2<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>给个例子：</strong><br>如图：<br><img src="https://img-blog.csdnimg.cn/20210606201314692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzU0NzU2NTkx,size_16,color_FFFFFF,t_70#pic_center"><br><strong>输出以后是：</strong></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">abc  de g  f先根遍历abcdegf中根遍历cbegdfa后根遍历cgefdba<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AR和Vuforia</title>
      <link href="/2022/04/15/ar-he-vuforia/"/>
      <url>/2022/04/15/ar-he-vuforia/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="AR的使用（基础篇）"><a href="#AR的使用（基础篇）" class="headerlink" title="AR的使用（基础篇）"></a>AR的使用（基础篇）</h2></blockquote><ol><li><p>引入packageManager里面的<br><img src="https://img-blog.csdnimg.cn/682ab3a123ee45fcbf63f2f543f43db3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_10,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>添加AR专用的摄像头，并关闭原有摄像头<br><img src="https://img-blog.csdnimg.cn/b61c5443903c4863ba3568408e726a7e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_11,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>添加定位图片<br><img src="https://img-blog.csdnimg.cn/c6ffb0f467284e4d88b3ca60fe6f536a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>然后就将我们要在AR中显示的物体放到这个Image里面作为子物体就行</p><blockquote><h3 id="Image的更换（保姆级教学）"><a href="#Image的更换（保姆级教学）" class="headerlink" title="Image的更换（保姆级教学）"></a>Image的更换（保姆级教学）</h3></blockquote></li></ol><ul><li>如果我们不更换Image的话，系统就会使用Vuforia自带的图</li><li>更换的话可以进入<a href="https://developer.vuforia.com/">Vuforia</a><br><img src="https://img-blog.csdnimg.cn/40ef6bd4c3164040b1aa2876f972caf5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>步骤如下</li></ul><p>*1.<br> <img src="https://img-blog.csdnimg.cn/56f8c5aa49d14ac1852853c1f5c4c1da.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="](https://img-blog.csdnimg.cn/ba6a473834d6432885c1ba9cdab6b3b1.png)"></p><p>*2.<br><img src="https://img-blog.csdnimg.cn/4518ffe1fb184c4d93330481586ce5c0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_8,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*3.             <img src="https://img-blog.csdnimg.cn/7e4bb0d7b1ff48eea0db53d453f6a90f.png" alt="在这里插入图片描述"><br>*4. 点开他，会有一个秘钥，复制他，后面要用<img src="https://img-blog.csdnimg.cn/357e1d0deda14c48a8ec558aa310bd60.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*5. .进入另一个界面<br><img src="https://img-blog.csdnimg.cn/96e46b539e9a40d5af5b520b8088a704.png" alt="在这里插入图片描述"><br>*6. 添加数据库<img src="https://img-blog.csdnimg.cn/2232b728003e4873b9e7716e872f8680.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*7.<br><img src="https://img-blog.csdnimg.cn/6084342f655a46b08b9ca25e80d62059.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*8.<br><img src="https://img-blog.csdnimg.cn/2d27560fb4f64b5887cffa8d991dc849.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_15,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*9.<br><img src="https://img-blog.csdnimg.cn/e3cdc8f822504863b19b4d4e4f8482ba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><strong>注意这个宽度千万不要打像素宽度，这个宽度是图片在unity里面显示的大小</strong></li></ul><p>*10. <img src="https://img-blog.csdnimg.cn/08175f452b2749cf87991dd3f6287dd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*11.<br><img src="https://img-blog.csdnimg.cn/dce37bed29424e12ba8da1ef203a6171.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_8,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*12.<br><img src="https://img-blog.csdnimg.cn/99ca161f8ca04872a118b07b1d3ac628.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_9,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*13. 在AR摄像机下找到<br><img src="https://img-blog.csdnimg.cn/9ff14689e2a14ddeacb7eeffb871193f.png" alt="在这里插入图片描述"><br>*14. 添加之前复制的秘钥(参考第4点)<br><img src="https://img-blog.csdnimg.cn/227e47ab64fc4c71bffa65aa04f438c2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_8,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*15. 再次添加Image会自动变成你添加的那个Image</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> unity </tag>
            
            <tag> AR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步编程详解</title>
      <link href="/2022/04/15/yi-bu-bian-cheng-xiang-jie/"/>
      <url>/2022/04/15/yi-bu-bian-cheng-xiang-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="异步调用的函数介绍及解释"><a href="#异步调用的函数介绍及解释" class="headerlink" title="异步调用的函数介绍及解释"></a>异步调用的函数介绍及解释</h2></blockquote><ol><li>AsyncCallback(IAsyncResult re) - - 回调函数（委托类型）<br>他的参数为异步结果这个异步结果可以为任何函数</li><li>IAsyncResult - - 接口类型函数<br>可以实现一些函数的赋值<br>例如：现在有一个委托</li></ol><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token keyword">delegate</span> <span class="token return-type class-name"><span class="token keyword">double</span></span> <span class="token function">AddDelegate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> nu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//取nu是更好的辨认</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当我们要给IAsyncResult赋值并且把他放入回调函数中<br>3. 可以使用BeginInvoke函数，他的返回值是IAsyncResult 类型<br>    <strong>并且他也是启动异步回调的函数</strong></p><p>我们可以写成</p><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token class-name">IAsyncResult</span> result <span class="token operator">=</span> addDel<span class="token punctuation">.</span><span class="token function">BeginInvoke</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> callBack<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中他的参数列表如下<br><img src="https://img-blog.csdnimg.cn/a293ea6f36db429a8281bc9ca5c79a88.png" alt="在这里插入图片描述"></p><ul><li>nu就是我们之前写的自定义函数AddDelegate中的参数为nu，如果我们这个自定义委托中有两个参数，那么就会是<br><img src="https://img-blog.csdnimg.cn/aad63022fec643de8ad255872d003f2c.png" alt="在这里插入图片描述"><br>前面会再加一个参数，相当于前面那一部分会是我们自定义委托的参数。</li><li>倒数第二个参数就是我们的回调函数，上图中的callBack是我们实例化的一个委托<br><img src="https://img-blog.csdnimg.cn/12d8189d3c1746e4ae205f0262e19535.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/0e0b9b584dc847688eff1fd1aa57ffb6.png" alt="在这里插入图片描述"><br>这个回调函数的委托中的参数为 IAsyncResult 类型</li><li>最后一个参数object是IAsyncResult 类型中的AsyncState<br>其中IAsyncResult接口内部为</li></ul><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IAsyncResult</span><span class="token punctuation">{</span>    <span class="token comment">//</span>    <span class="token comment">// 摘要:</span>    <span class="token comment">//     Gets a user-defined object that qualifies or contains information about an asynchronous</span>    <span class="token comment">//     operation.</span>    <span class="token comment">//</span>    <span class="token comment">// 返回结果:</span>    <span class="token comment">//     A user-defined object that qualifies or contains information about an asynchronous</span>    <span class="token comment">//     operation.</span>    <span class="token return-type class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> AsyncState <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token comment">//这个就是我们的object参数赋的值</span>    <span class="token comment">//</span>    <span class="token comment">// 摘要:</span>    <span class="token comment">//     Gets a System.Threading.WaitHandle that is used to wait for an asynchronous operation</span>    <span class="token comment">//     to complete.</span>    <span class="token comment">//</span>    <span class="token comment">// 返回结果:</span>    <span class="token comment">//     A System.Threading.WaitHandle that is used to wait for an asynchronous operation</span>    <span class="token comment">//     to complete.</span>    <span class="token return-type class-name">WaitHandle</span> AsyncWaitHandle <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>    <span class="token comment">//</span>    <span class="token comment">// 摘要:</span>    <span class="token comment">//     Gets a value that indicates whether the asynchronous operation completed synchronously.</span>    <span class="token comment">//</span>    <span class="token comment">// 返回结果:</span>    <span class="token comment">//     true if the asynchronous operation completed synchronously; otherwise, false.</span>    <span class="token return-type class-name"><span class="token keyword">bool</span></span> CompletedSynchronously <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>    <span class="token comment">//</span>    <span class="token comment">// 摘要:</span>    <span class="token comment">//     Gets a value that indicates whether the asynchronous operation has completed.</span>    <span class="token comment">//</span>    <span class="token comment">// 返回结果:</span>    <span class="token comment">//     true if the operation is complete; otherwise, false.</span>    <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsCompleted <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>EndInvoke(IAsyncResult re) 函数<br>他的返回的是re的函数的返回结果，当然他的主要作用的用来阻塞异步调用，<br>如果我们的re函数为<br><img src="https://img-blog.csdnimg.cn/676f7bcda829462ba1e304bf2f3b1b8b.png" alt="在这里插入图片描述"><br>那么这个函数的返回类型就是double且结果为之前在BeginInvoke函数中参数传递后的结果。<blockquote><h2 id="异步编程"><a href="#异步编程" class="headerlink" title="异步编程"></a>异步编程</h2></blockquote></li></ul><ol><li>函数介绍 BeginAccept（AsyncCallback asyncCallback，Ojbectstate）<br><img src="https://img-blog.csdnimg.cn/4ddd7b5b946e4f2bb9ef0c8548a64cf1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_13,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li></ol><p><strong>跟BeginInvoke很像，都是一样的</strong>。只是这个是在异步编程传输数据的时候使用</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java小游戏之飞机大战</title>
      <link href="/2022/04/15/java-xiao-you-xi-zhi-fei-ji-da-zhan/"/>
      <url>/2022/04/15/java-xiao-you-xi-zhi-fei-ji-da-zhan/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="飞机大战脚本组成"><a href="#飞机大战脚本组成" class="headerlink" title="飞机大战脚本组成"></a>飞机大战脚本组成</h2><p>1.有一个所有物体的父物体GameObject，然后就是一堆物体继承于他，等到他的属性于函数。<br>2.窗口组件<br>3.工具脚本(负责做一些杂事和存放图片)</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2></blockquote><ol><li>GameObject</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">object</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameWindow</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameObject</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> image<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> x<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> y<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> width<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> height<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> speed<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> image<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setImage</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>image <span class="token operator">=</span> image<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setX</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> y<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setY</span><span class="token punctuation">(</span><span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> width<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token keyword">int</span> width<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> height<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> speed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSpeed</span><span class="token punctuation">(</span><span class="token keyword">double</span> speed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">GameWindow</span> <span class="token function">getFram</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> fram<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFram</span><span class="token punctuation">(</span><span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fram <span class="token operator">=</span> fram<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">GameObject</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">,</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>image <span class="token operator">=</span> image<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fram <span class="token operator">=</span> fram<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">GameObject</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>image <span class="token operator">=</span> image<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">GameObject</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">GameObject</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">GameObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//无参构造</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gImage<span class="token punctuation">)</span><span class="token punctuation">{</span>        gImage<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Rectangle</span> <span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>背景</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">object</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameWindow</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> bgObj <span class="token keyword">extends</span> <span class="token class-name">GameObject</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token function">bgObj</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">,</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> speed<span class="token punctuation">,</span> fram<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">bgObj</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">bgObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">paintSelf</span><span class="token punctuation">(</span>gImage<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//y+=speed;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>玩家</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">object</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameWindow</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Plane</span> <span class="token keyword">extends</span> <span class="token class-name">GameObject</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Plane</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">,</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> speed<span class="token punctuation">,</span> fram<span class="token punctuation">)</span><span class="token punctuation">;</span>        fram<span class="token punctuation">.</span><span class="token function">addMouseMotionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MouseAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseMoved</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//跟随鼠标移动</span>                <span class="token class-name">Plane</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span>x<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">11</span><span class="token punctuation">;</span><span class="token comment">//鼠标位置减去飞机位置的一半相当于鼠标在飞机中间</span>                <span class="token class-name">Plane</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span>y<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Plane</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Plane</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        gImage<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//与敌方boss碰撞死亡</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span>bossObj<span class="token operator">!=</span><span class="token keyword">null</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span>bossObj<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span><span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Rectangle</span> <span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>子弹</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">object</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameWindow</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> shellObj <span class="token keyword">extends</span> <span class="token class-name">GameObject</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">shellObj</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">,</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> speed<span class="token punctuation">,</span> fram<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">shellObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        gImage<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        y<span class="token operator">-=</span>speed<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>y<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">;</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Rectangle</span> <span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>敌机</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">object</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameWindow</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> enemyObj <span class="token keyword">extends</span> <span class="token class-name">GameObject</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">enemyObj</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">,</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> speed<span class="token punctuation">,</span> fram<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">enemyObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        gImage<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        y<span class="token operator">+=</span>speed<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span>planeObj<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">GameWindow</span><span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span><span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//重画一帧</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>shellObj item<span class="token operator">:</span> <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>shellObjList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">ExplodeObj</span> obj<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ExplodeObj</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>explodeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>                item<span class="token punctuation">.</span><span class="token function">setX</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                item<span class="token punctuation">.</span><span class="token function">setY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">;</span>                <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">GameWindow</span><span class="token punctuation">.</span>score<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>y<span class="token operator">&gt;</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">;</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Rectangle</span> <span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>敌方boss</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">object</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameWindow</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BossObj</span> <span class="token keyword">extends</span> <span class="token class-name">GameObject</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> life<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">BossObj</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">,</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> speed<span class="token punctuation">,</span> fram<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">BossObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        gImage<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token operator">&gt;</span><span class="token number">485</span><span class="token operator">||</span>x<span class="token operator">&lt;</span><span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            speed<span class="token operator">=</span><span class="token operator">-</span>speed<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        x<span class="token operator">+=</span>speed<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>shellObj item<span class="token operator">:</span> <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>shellObjList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                item<span class="token punctuation">.</span><span class="token function">setX</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                item<span class="token punctuation">.</span><span class="token function">setY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>                life<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>life<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">GameWindow</span><span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span><span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//重画一帧</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//血条的白色背景</span>        gImage<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">;</span>        gImage<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//红血条的绘制</span>        gImage<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span><span class="token punctuation">;</span>        gImage<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span>life<span class="token operator">*</span><span class="token number">100</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Rectangle</span> <span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="7"><li>敌方子弹</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">object</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameWindow</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BulletObj</span> <span class="token keyword">extends</span> <span class="token class-name">GameObject</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">BulletObj</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">,</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> speed<span class="token punctuation">,</span> fram<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">BulletObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        gImage<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        y<span class="token operator">+=</span>speed<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span>planeObj<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fram<span class="token punctuation">.</span><span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>y<span class="token operator">&gt;</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">300</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">300</span><span class="token punctuation">;</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Rectangle</span> <span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="8"><li>敌方的爆炸效果</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">object</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token class-name">GameWindow</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExplodeObj</span> <span class="token keyword">extends</span> <span class="token class-name">GameObject</span> <span class="token punctuation">{</span>    <span class="token comment">//调用的帧数</span>    <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token class-name">Image</span> explode<span class="token operator">=</span><span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/boom.gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">ExplodeObj</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> speed<span class="token punctuation">,</span> <span class="token class-name">GameWindow</span> fram<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> speed<span class="token punctuation">,</span> fram<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">ExplodeObj</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">ExplodeObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">ExplodeObj</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">.</span>image<span class="token operator">=</span>explode<span class="token punctuation">;</span>            gImage<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//要可以设置大小</span>            count<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//super.paintSelf(gImage);</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Rectangle</span> <span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="9"><li>工具类</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">object<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>tools<span class="token punctuation">.</span></span><span class="token class-name">Tool</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameUtils</span> <span class="token punctuation">{</span>    <span class="token comment">//背景图片</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> bgImage <span class="token operator">=</span> <span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/backGroup.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//BOSS图片</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> bossImage <span class="token operator">=</span> <span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/boss.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//动态爆炸图片</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> boomImage <span class="token operator">=</span> <span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/boom.gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//我方飞机爆炸图片</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> boom_2Image <span class="token operator">=</span> <span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/boom2.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//敌方飞机爆炸图片</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> boom_3Image <span class="token operator">=</span> <span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/boom3.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//己方飞机</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> planeImage<span class="token operator">=</span><span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/plane2.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//我方子弹</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> shellImage<span class="token operator">=</span><span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/shell.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//敌方飞机</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> enemyImage<span class="token operator">=</span><span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/enemy.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//敌方子弹</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Image</span> bulletImage<span class="token operator">=</span><span class="token class-name">Toolkit</span><span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"Images/bullet.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//物体的集合</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GameObject</span><span class="token punctuation">&gt;</span></span> gameObjList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//子弹的集合</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>shellObj<span class="token punctuation">&gt;</span></span> shellObjList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//敌方飞机集合</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>enemyObj<span class="token punctuation">&gt;</span></span> enemyObjList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Boss子弹的集合</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BulletObj</span><span class="token punctuation">&gt;</span></span> bulletObjList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//需要移除的目标的集合</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GameObject</span><span class="token punctuation">&gt;</span></span> removeObjList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//敌机爆炸的集合</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExplodeObj</span><span class="token punctuation">&gt;</span></span> explodeObjList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//写字</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">DrawWord</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> gGrafics<span class="token punctuation">,</span><span class="token class-name">String</span> word<span class="token punctuation">,</span><span class="token class-name">Color</span> color<span class="token punctuation">,</span><span class="token keyword">int</span> size<span class="token punctuation">,</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>        gGrafics<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置字体颜色</span>        gGrafics<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">"仿宋"</span><span class="token punctuation">,</span><span class="token class-name">Font</span><span class="token punctuation">.</span>BOLD<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gGrafics<span class="token punctuation">.</span><span class="token function">drawString</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="10"><li>窗口类</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">object<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">KeyAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">KeyEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameWindow</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token comment">//0未开始，1游戏中，2暂停，3通关失败，4,通关成功</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//分数</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> score<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//生成多少飞机后生成boss</span>    <span class="token keyword">int</span> num<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> width<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> height<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">;</span>    <span class="token comment">//画布重画的次数</span>    <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//敌机生成数目</span>    <span class="token keyword">int</span> enemy_count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//开双缓存的图片</span>    <span class="token class-name">Image</span> offImage<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token comment">//背景</span>    bgObj bgOb <span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">bgObj</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bgImage<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//玩家飞机</span>    <span class="token keyword">public</span> <span class="token class-name">Plane</span> planeObj <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Plane</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>planeImage<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Boss</span>    <span class="token keyword">public</span> <span class="token class-name">BossObj</span> bossObj<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//大小</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置在屏幕中间</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"飞机大战之Boss决战篇"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//关掉后清理缓存</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加一个监听器MouseAdapter,然后重写他的方法</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addMouseListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MouseAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseClicked</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>state<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    state<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加一个键盘的监听事件</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addKeyListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">KeyAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">keyPressed</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getKeyCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token char">' '</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//按下空格就暂停，暂停就相当于不再重画画布</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            state<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            state<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bgOb<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>planeObj<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token operator">==</span><span class="token number">1</span><span class="token operator">||</span>state<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">creatGameObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//每秒调用40次</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图片解析出错，错误原因："</span><span class="token operator">+</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paint</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>offImage<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            offImage<span class="token operator">=</span><span class="token function">createImage</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span> <span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">Graphics</span> gGraphic<span class="token operator">=</span>offImage<span class="token punctuation">.</span><span class="token function">getGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用两张图片用双缓存来画防止闪烁</span>        gGraphic<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//游戏未开始时绘图</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token class-name">MediaTracker</span> mediaTracker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaTracker</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTracker<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bgImage<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTracker<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bossImage<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTracker<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>boomImage<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTracker<span class="token punctuation">.</span><span class="token function">waitForAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                gGraphic<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bgImage<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//让图片加载完以后再显示</span>                gGraphic<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bossImage<span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//boss</span>                gGraphic<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>boomImage<span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">380</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//爆炸</span>                <span class="token class-name">GameUtils<span class="token punctuation">.</span>DrawWord</span><span class="token punctuation">(</span>gGraphic<span class="token punctuation">,</span><span class="token string">"点击此处游戏开始"</span><span class="token punctuation">,</span><span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">170</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//文字标识</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图片解析出错，错误原因："</span><span class="token operator">+</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//游戏开始时绘图</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>explodeObjList<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//将物件集合中所有东西画出</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">paintSelf</span><span class="token punctuation">(</span>gGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//分数显示</span>            <span class="token class-name">GameUtils<span class="token punctuation">.</span>DrawWord</span><span class="token punctuation">(</span>gGraphic<span class="token punctuation">,</span><span class="token string">"得分: "</span><span class="token operator">+</span>score<span class="token operator">+</span><span class="token string">" 分"</span><span class="token punctuation">,</span><span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//文字标识</span>            <span class="token comment">//将所有要移除的物件移除</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//暂停</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//不做任何事就是暂停</span>        <span class="token punctuation">}</span>        <span class="token comment">//游戏结束</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token comment">//让场景保持不变</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">paintSelf</span><span class="token punctuation">(</span>gGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment">//额外画出一些字</span>                <span class="token class-name">MediaTracker</span> mediaTracker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaTracker</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTracker<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>boom_2Image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTracker<span class="token punctuation">.</span><span class="token function">waitForID</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                gGraphic<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>boom_2Image<span class="token punctuation">,</span>planeObj<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> planeObj<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//爆炸</span>                <span class="token class-name">GameUtils<span class="token punctuation">.</span>DrawWord</span><span class="token punctuation">(</span>gGraphic<span class="token punctuation">,</span><span class="token string">"菜"</span><span class="token punctuation">,</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">270</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//文字标识</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图片解析出错，错误原因："</span><span class="token operator">+</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//游戏通关</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token comment">//先让不该出现的东西消失</span>                <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>removeObjList<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//让场景保持不变</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">paintSelf</span><span class="token punctuation">(</span>gGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment">//额外画出一些字</span>                <span class="token class-name">MediaTracker</span> mediaTracker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaTracker</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTracker<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>boom_3Image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTracker<span class="token punctuation">.</span><span class="token function">waitForID</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                gGraphic<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>boom_3Image<span class="token punctuation">,</span>bossObj<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> bossObj<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//爆炸</span>                <span class="token class-name">GameUtils<span class="token punctuation">.</span>DrawWord</span><span class="token punctuation">(</span>gGraphic<span class="token punctuation">,</span><span class="token string">"虽然你赢了，但你还是菜"</span><span class="token punctuation">,</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//文字标识</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图片解析出错，错误原因："</span><span class="token operator">+</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>offImage<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        count<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">void</span> <span class="token function">creatGameObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//我方子弹的生成</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token operator">%</span><span class="token number">15</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>shellObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">shellObj</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>shellImage<span class="token punctuation">,</span>planeObj<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">,</span> planeObj<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>shellObjList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>shellObjList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//敌机的生成</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token operator">%</span><span class="token number">15</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>enemyObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">enemyObj</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>enemyImage<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>enemyObjList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>enemyObjList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            enemy_count<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//敌方子弹的生成</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>bossObj<span class="token operator">!=</span><span class="token keyword">null</span><span class="token operator">&amp;&amp;</span>count<span class="token operator">%</span><span class="token number">15</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bulletObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BulletObj</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bulletImage<span class="token punctuation">,</span>bossObj<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">76</span><span class="token punctuation">,</span> bossObj<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bulletObjList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bulletObjList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>enemy_count<span class="token operator">&gt;</span>num<span class="token operator">&amp;&amp;</span>bossObj<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            bossObj<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BossObj</span><span class="token punctuation">(</span><span class="token class-name">GameUtils</span><span class="token punctuation">.</span>bossImage<span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">155</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">GameUtils</span><span class="token punctuation">.</span>gameObjList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bossObj<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="11"><li>主程序</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">object<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">utils<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PlanWarMain</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">GameWindow</span> gWin<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">GameWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name"><span class="token namespace">gWin<span class="token punctuation">.</span></span>Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2></blockquote><ul><li><strong>没有长的可以循环的背景就随便弄了个背景</strong>（当然，是懒得做，诶嘿）<br><img src="https://img-blog.csdnimg.cn/1382e9a05430493a9355847d934f368a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/f6ec2ec5b5c24337ac1a4103a90ed53b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_13,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/4679114410ce4d61a88bce15e074f5a9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_14,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/781497386f044c25a698739666c6e2b1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_15,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>csharp和SqlServer数据库连接</title>
      <link href="/2022/04/15/csharp-he-sqlserver-shu-ju-ku-lian-jie/"/>
      <url>/2022/04/15/csharp-he-sqlserver-shu-ju-ku-lian-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="代码如下，请看注释"><a href="#代码如下，请看注释" class="headerlink" title="代码如下，请看注释"></a>代码如下，请看注释</h2></blockquote><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>SqlClient</span><span class="token punctuation">;</span><span class="token keyword">namespace</span> <span class="token namespace">CSharpTest</span><span class="token punctuation">{</span>    <span class="token keyword">class</span> <span class="token class-name">Program</span>    <span class="token punctuation">{</span>        <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token class-name">Express</span> ex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//将Student表内加一个元组</span>            <span class="token class-name"><span class="token keyword">string</span></span> t <span class="token operator">=</span> <span class="token string">"insert into Student values('204361128', '陈力', '男', '14', 'CS')"</span><span class="token punctuation">;</span>            <span class="token comment">//将Student表内数据选出来</span>            <span class="token class-name"><span class="token keyword">string</span></span> t2 <span class="token operator">=</span> <span class="token string">"select * from Student"</span><span class="token punctuation">;</span>            <span class="token comment">//Console.WriteLine(ex.NonQuery(t));//更改表内数据</span>            <span class="token class-name">DataSet</span> ds <span class="token operator">=</span> ex<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">DataTable</span> dTab <span class="token operator">=</span> ds<span class="token punctuation">.</span>Tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">DataColumn</span> item <span class="token keyword">in</span> dTab<span class="token punctuation">.</span>Columns<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>ColumnName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//查询表内属性</span>            <span class="token punctuation">}</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">DataRow</span> item <span class="token keyword">in</span> dTab<span class="token punctuation">.</span>Rows<span class="token punctuation">)</span><span class="token comment">//遍历行</span>            <span class="token punctuation">{</span>                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">DataColumn</span> tt <span class="token keyword">in</span> dTab<span class="token punctuation">.</span>Columns<span class="token punctuation">)</span><span class="token comment">//把表内当前行的每个属性的值输出</span>                <span class="token punctuation">{</span>                    Console<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span>tt<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">class</span> <span class="token class-name">Express</span>    <span class="token punctuation">{</span>        <span class="token comment">//本地连接一个本地数据库中一个叫s204361124的数据库</span>        <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">string</span></span> connString <span class="token operator">=</span> <span class="token string">"Data Source=.;Initial Catalog=s204361124;Integrated Security=TRUE"</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">SqlConnection</span> conn<span class="token punctuation">;</span>        <span class="token comment">//数据库的增删操作</span>        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">NonQuery</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> sql<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            conn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlConnection</span><span class="token punctuation">(</span>connString<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name"><span class="token keyword">int</span></span> a <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                conn<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">SqlCommand</span> cmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlCommand</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>                a <span class="token operator">=</span> cmd<span class="token punctuation">.</span><span class="token function">ExecuteNonQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span>            <span class="token punctuation">{</span>                            <span class="token punctuation">}</span>            <span class="token keyword">finally</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>conn<span class="token punctuation">.</span>State<span class="token operator">==</span>ConnectionState<span class="token punctuation">.</span>Open<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"有问题"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> a<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//数据库的查询操作</span>        <span class="token keyword">public</span> <span class="token return-type class-name">DataSet</span> <span class="token function">Query</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> sql<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            conn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlConnection</span><span class="token punctuation">(</span>connString<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">DataSet</span> ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                conn<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//打开数据库</span>                <span class="token class-name">SqlDataAdapter</span> adp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlDataAdapter</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> conn<span class="token punctuation">)</span><span class="token punctuation">;</span>                adp<span class="token punctuation">.</span><span class="token function">Fill</span><span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span>            <span class="token punctuation">{</span>            <span class="token punctuation">}</span>            <span class="token keyword">finally</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>conn<span class="token punctuation">.</span>State <span class="token operator">==</span> ConnectionState<span class="token punctuation">.</span>Open<span class="token punctuation">)</span>                    conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//关闭数据库</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> ds<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>具体参考<a href="https://blog.csdn.net/ABC13222880223/article/details/81974120?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=DataSet&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-81974120.nonecase&amp;spm=1018.2226.3001.4187">—-&gt;此处</a></p><blockquote><h4 id="使用SqlServer连接处理二进制数据"><a href="#使用SqlServer连接处理二进制数据" class="headerlink" title="使用SqlServer连接处理二进制数据"></a>使用SqlServer连接处理二进制数据</h4><p>1.首先将要存的数据转化成二进制，再存入数据库，具体操作如下</p></blockquote><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>SqlClient</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>RegularExpressions</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>Serialization<span class="token punctuation">.</span>Formatters<span class="token punctuation">.</span>Binary</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>Serialization</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span><span class="token keyword">namespace</span> <span class="token namespace">Connect2</span><span class="token punctuation">{</span>    <span class="token keyword">class</span> <span class="token class-name">DataMgr</span>    <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token class-name">SqlConnection</span> sqlConn<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DataMgr</span> instance<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">DataMgr</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            instance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            <span class="token function">Connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token class-name"><span class="token keyword">string</span></span> connStr <span class="token operator">=</span> <span class="token string">"Data Source=.;Initial Catalog=Internet;Integrated Security=TRUE"</span><span class="token punctuation">;</span>            sqlConn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlConnection</span><span class="token punctuation">(</span>connStr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                <span class="token comment">//打开数据库</span>                sqlConn<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]Connect "</span><span class="token operator">+</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//正则表达式判断是否符合注册标准</span>        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">IsSafeStr</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> str<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token operator">!</span>Regex<span class="token punctuation">.</span><span class="token function">IsMatch</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">@"[-|;|,|\/|\(|\)|\[|\]|\}|\{|%|@|\*|!|\']"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanRegister</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> id<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsSafeStr</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name"><span class="token keyword">string</span></span> cmdStr <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"select * from Iuser where id='{0}'"</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                <span class="token class-name">SqlDataAdapter</span> adap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlDataAdapter</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">,</span>sqlConn<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">DataSet</span> ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                adap<span class="token punctuation">.</span><span class="token function">Fill</span><span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">DataTable</span> dTable <span class="token operator">=</span> ds<span class="token punctuation">.</span>Tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token comment">//查到了数据就返回不可注册，否则就可以注册</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>dTable<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span>Count<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]IsSafeFail "</span><span class="token operator">+</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Register</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> id<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> pw<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment">//防止sql注入，也就是非正常用户名</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsSafeStr</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token operator">||</span><span class="token operator">!</span><span class="token function">IsSafeStr</span><span class="token punctuation">(</span>pw<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">CanRegister</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]Registe!canRegister "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//如果条件全部满足则允许注册角色</span>            <span class="token class-name"><span class="token keyword">string</span></span> cmdStr <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"insert into Iuser values('{0}','{1}')"</span><span class="token punctuation">,</span>id<span class="token punctuation">,</span>pw<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">SqlCommand</span> sqlcmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlCommand</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">,</span>sqlConn<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                sqlcmd<span class="token punctuation">.</span><span class="token function">ExecuteNonQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]Register "</span><span class="token operator">+</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CreatePlayer</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> id<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment">//防止sql注入</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsSafeStr</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name">IFormatter</span> formatter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">BinaryFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">MemoryStream</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">PlayerData</span> pData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PlayerData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                formatter<span class="token punctuation">.</span><span class="token function">Serialize</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span>pData<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]CreatePlayer 序列化失败 "</span><span class="token operator">+</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//将其转化的流转为字符数组</span>            <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> bytes <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name"><span class="token keyword">string</span></span> cmdstr <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"insert into player values('{0}',@data)"</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                <span class="token class-name">SqlCommand</span> sqlCmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlCommand</span><span class="token punctuation">(</span>cmdstr<span class="token punctuation">,</span>sqlConn<span class="token punctuation">)</span><span class="token punctuation">;</span>                sqlCmd<span class="token punctuation">.</span>Parameters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"@data"</span><span class="token punctuation">,</span>SqlDbType<span class="token punctuation">.</span>VarBinary<span class="token punctuation">)</span><span class="token punctuation">;</span>                sqlCmd<span class="token punctuation">.</span>Parameters<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">=</span> bytes<span class="token punctuation">;</span>                sqlCmd<span class="token punctuation">.</span><span class="token function">ExecuteNonQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]CreatePlayer 加入数据库 "</span><span class="token operator">+</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CheckPassWord</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> id<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> pw<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment">//防止sql注入，也就是非正常用户名</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsSafeStr</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">IsSafeStr</span><span class="token punctuation">(</span>pw<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//使数据库里的text类型与其兼容</span>            <span class="token class-name"><span class="token keyword">string</span></span> cmdStr <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"select * from Iuser where id='{0}' and cast(pw as varchar(2000))='{1}'"</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span>pw<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                <span class="token class-name">SqlDataAdapter</span> adap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlDataAdapter</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">,</span> sqlConn<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">DataSet</span> ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                adap<span class="token punctuation">.</span><span class="token function">Fill</span><span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">DataTable</span> dTable <span class="token operator">=</span> ds<span class="token punctuation">.</span>Tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment">//查到了数据就返回验证成功，否则就失败</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>dTable<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span>Count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]CheckPasswordFail "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token return-type class-name">PlayerData</span> <span class="token function">GetPlayerData</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> id<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token class-name">PlayerData</span> pData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsSafeStr</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">return</span> pData<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name"><span class="token keyword">string</span></span> cmdStr <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"select * from player where id ='{0}'"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                <span class="token class-name">SqlDataAdapter</span> sqlAda <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlDataAdapter</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">,</span>sqlConn<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">DataSet</span> dSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                sqlAda<span class="token punctuation">.</span><span class="token function">Fill</span><span class="token punctuation">(</span>dSet<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">DataTable</span> dTable <span class="token operator">=</span> dSet<span class="token punctuation">.</span>Tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>dTable<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span>Count<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    <span class="token keyword">return</span> pData<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token class-name">DataRow</span> dRow <span class="token operator">=</span> dTable<span class="token punctuation">.</span>Rows<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token class-name"><span class="token keyword">int</span></span> len <span class="token operator">=</span> dRow<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Length<span class="token punctuation">;</span>                buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment">///</span>                <span class="token comment">///这地方很有可能出错后面改一下</span>                <span class="token comment">///</span>                buffer <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>dRow<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]GetPlayerFile转化成字节数组失败 "</span><span class="token operator">+</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> pData<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name">MemoryStream</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                <span class="token class-name">BinaryFormatter</span> formatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BinaryFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                pData <span class="token operator">=</span> <span class="token punctuation">(</span>PlayerData<span class="token punctuation">)</span>formatter<span class="token punctuation">.</span><span class="token function">Deserialize</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> pData<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]GetPlayerFile反序列化失败 "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> pData<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">SavePlayer</span><span class="token punctuation">(</span><span class="token class-name">Player</span> player<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token class-name"><span class="token keyword">string</span></span> id <span class="token operator">=</span> player<span class="token punctuation">.</span>id<span class="token punctuation">;</span>            <span class="token class-name">PlayerData</span> playerData <span class="token operator">=</span> player<span class="token punctuation">.</span>pData<span class="token punctuation">;</span>            <span class="token class-name">IFormatter</span> formatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BinaryFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">MemoryStream</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                formatter<span class="token punctuation">.</span><span class="token function">Serialize</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span>playerData<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]SavePlayerFile序列化失败 "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> buffer <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name"><span class="token keyword">string</span></span> cmdStr <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"update player set playerData =@data where id = '{0}'"</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">SqlCommand</span> cmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlCommand</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">,</span>sqlConn<span class="token punctuation">)</span><span class="token punctuation">;</span>            cmd<span class="token punctuation">.</span>Parameters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"@data"</span><span class="token punctuation">,</span>SqlDbType<span class="token punctuation">.</span>VarBinary<span class="token punctuation">)</span><span class="token punctuation">;</span>            cmd<span class="token punctuation">.</span>Parameters<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">=</span> buffer<span class="token punctuation">;</span>            <span class="token keyword">try</span>            <span class="token punctuation">{</span>                cmd<span class="token punctuation">.</span><span class="token function">ExecuteNonQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"[DataMgr]SavePlayerFile保存失败 "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> SqlServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cSharp使用细节</title>
      <link href="/2022/04/10/csharp-shi-yong-xi-jie/"/>
      <url>/2022/04/10/csharp-shi-yong-xi-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="接口的使用细节"><a href="#接口的使用细节" class="headerlink" title="接口的使用细节"></a>接口的使用细节</h2><p>假如我要创建一个二重的接口需要以以下方法创建</p></blockquote><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token class-name">IList<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> arrs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>前半部分为接口，后半部分为实例化部分，现在前半部分的接口为IList&lt;List<int>&gt;，相当于二维数组的第一层那部分为接口，里面的为实例化int型，后面要为这个接口赋值的话，也必须是IList&lt;List<int>&gt;类型，或者是List&lt;List<int>&gt;类型因为是其子类，哪怕是IList&lt;IList<int>&gt;都不行。</int></int></int></int></p><ul><li>IList&lt;T&gt;是泛型接口的基类</li><li>List&lt;T&gt;是IList&lt;T&gt;的子类，也就是实例化了的类</li><li>给IList&lt;T&gt;赋值还可以自定义一个他的子类，实现他的方法</li><li>IList&lt;IList&lt;T&gt;&gt;类型可以被List&lt;IList&lt;T&gt;&gt;实例化，其中内部那个可以是我们实例化的IList接口垫任何子类<blockquote><h2 id="二维List的输入与输出例子"><a href="#二维List的输入与输出例子" class="headerlink" title="二维List的输入与输出例子"></a>二维List的输入与输出例子</h2></blockquote></li></ul><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">class</span> <span class="token class-name">Test</span>   <span class="token punctuation">{</span>       <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>       <span class="token punctuation">{</span>           <span class="token class-name">Solution</span> sol <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">int</span></span><span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token class-name"><span class="token keyword">string</span></span> t <span class="token operator">=</span> Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name"><span class="token keyword">int</span></span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>           <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> a <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token char">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> item <span class="token keyword">in</span> a<span class="token punctuation">)</span>           <span class="token punctuation">{</span>               arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> brr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">int</span></span><span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>           Array<span class="token punctuation">.</span><span class="token function">Copy</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> brr<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name"><span class="token keyword">int</span></span> tar <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span>Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">IList<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> arrs <span class="token operator">=</span> sol<span class="token punctuation">.</span><span class="token function">CombinationSum</span><span class="token punctuation">(</span>brr<span class="token punctuation">,</span> tar<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> item <span class="token keyword">in</span> arrs<span class="token punctuation">)</span>           <span class="token punctuation">{</span>               <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token keyword">in</span> item<span class="token punctuation">)</span>               <span class="token punctuation">{</span>                   Console<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>       <span class="token punctuation">}</span>   <span class="token punctuation">}</span>   <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span>   <span class="token punctuation">{</span>       <span class="token keyword">public</span> <span class="token return-type class-name">IList<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">CombinationSum</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> candidates<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> target<span class="token punctuation">)</span>       <span class="token punctuation">{</span>           <span class="token class-name">IList<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token function">dfs</span><span class="token punctuation">(</span>candidates<span class="token punctuation">,</span>result<span class="token punctuation">,</span>t<span class="token punctuation">,</span>target<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">return</span> result<span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> candidates<span class="token punctuation">,</span><span class="token class-name">IList<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">,</span><span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> t<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> target<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> index<span class="token punctuation">)</span>       <span class="token punctuation">{</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>           <span class="token punctuation">{</span>               result<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">return</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>           <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> candidates<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>           <span class="token punctuation">{</span>               t<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               target <span class="token operator">-=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token function">dfs</span><span class="token punctuation">(</span>candidates<span class="token punctuation">,</span>result<span class="token punctuation">,</span>t<span class="token punctuation">,</span>target<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>               target <span class="token operator">+=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>               t<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>       <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目点这里](<a href="https://leetcode-cn.com/problems/combination-sum/">https://leetcode-cn.com/problems/combination-sum/</a>)</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ray详解鼠标选取物品以及目标匹配</title>
      <link href="/2022/04/09/ray-xiang-jie-shu-biao-xuan-qu-wu-pin-yi-ji-mu-biao-pi-pei/"/>
      <url>/2022/04/09/ray-xiang-jie-shu-biao-xuan-qu-wu-pin-yi-ji-mu-biao-pi-pei/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="Ray"><a href="#Ray" class="headerlink" title="Ray"></a>Ray</h2></blockquote><ul><li>Ray (origin : Vector3, direction : Vector3)<br>Origin 是射线的中心<br>Direction 是射线的长度</li><li>Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition)<br>这句话的意思为创一个射线在鼠标所在位置从摄像机发送至屏幕</li><li>除了Ray还有Physics.Raycast<br>用以检测光线是否触碰到物体<br>其中API文档中有的四个</li></ul><ol><li><p>public static bool Raycast(Ray ray, RaycastHit hitInfo, float distance, int layerMask);</p></li><li><p>public static bool Raycast(Ray ray, float distance, int layerMask);</p></li><li><p>public static bool Raycast(Vector3 origin, Vector3 direction, float distance, int layerMask);</p></li><li><p>public static bool Raycast(Vector3 origin, Vector3 direction, RaycastHit , float distance ，int layerMask);</p></li></ol><p><em><strong>个人认为参数多点会更提高代码可读性</strong></em><br>除此之外还可以去vs里查看更多Raycast的重载<br><strong>注意</strong>：<em>这个layerMask一定要用LayerMask.GetMask<br>不要用LayerMask.NameToLayer去得到当前蒙版的级别<br>因为这个参数里面的Layermask是2的当前层级的次方</em></p><ul><li>RaycastHit（上一个的函数里面有一个参数是这个）<br> 这个可以提供你一个介值使用out参数传递给上面的函数在那里面使用使用完以后这个RaycastHit类型参数就有值可以使用了，可以吧有值的这个参数当做gameobject类型使用。<blockquote><h2 id="鼠标选择物体"><a href="#鼠标选择物体" class="headerlink" title="鼠标选择物体"></a>鼠标选择物体</h2></blockquote></li><li>首先放三个物体<br><img src="https://img-blog.csdnimg.cn/6947ac949f4c4f6a81476ebbb5d33cf8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>然后给他们的Layer改一下<br><img src="https://img-blog.csdnimg.cn/69dd7eff7a984a9dbf21cc19294af961.png" alt="在这里插入图片描述"></li><li>写上ray相关的代码</li></ul><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> TargetMask<span class="token punctuation">;</span>    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        TargetMask <span class="token operator">=</span> LayerMask<span class="token punctuation">.</span><span class="token function">GetMask</span><span class="token punctuation">(</span><span class="token string">"Target"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//得到的</span>        <span class="token function">print</span><span class="token punctuation">(</span>TargetMask<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出看看是不是得到了值</span>    <span class="token punctuation">}</span>    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token class-name">Ray</span> ray <span class="token operator">=</span> Camera<span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">ScreenPointToRay</span><span class="token punctuation">(</span>Input<span class="token punctuation">.</span>mousePosition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//从鼠标所在位置发射射线</span>        <span class="token class-name">RaycastHit</span> hit<span class="token punctuation">;</span><span class="token comment">//设置一个被射线射到的物体</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Physics<span class="token punctuation">.</span><span class="token function">Raycast</span><span class="token punctuation">(</span>ray<span class="token punctuation">,</span><span class="token keyword">out</span> hit<span class="token punctuation">,</span><span class="token number">100.0F</span><span class="token punctuation">,</span>TargetMask<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//使这个射线往原定方向射100米并且只与你设置的Layer层级相撞</span>        <span class="token punctuation">{</span>            <span class="token class-name">Vector3</span> offset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//目标物体偏移量</span>            hit<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>position <span class="token operator">+=</span> offset<span class="token punctuation">;</span><span class="token comment">//使目标物体偏移</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>当鼠标移至目标位置会有下图的效果<br><img src="https://img-blog.csdnimg.cn/2c5bd98893904e15872f44fc295812ce.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_11,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>如有需要可以设置成需要按什么键的时候鼠标在上面才会移动<blockquote><h2 id="目标匹配"><a href="#目标匹配" class="headerlink" title="目标匹配"></a>目标匹配</h2></blockquote></li><li>函数：</li></ul><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token return-type class-name"><span class="token keyword">void</span></span> MatchTarget <span class="token punctuation">(</span><span class="token class-name">Vector3</span> matchPosition<span class="token punctuation">,</span> <span class="token class-name">Quaternion</span> matchRotation<span class="token punctuation">,</span> <span class="token class-name">AvatarTarget</span> targetBodyPart<span class="token punctuation">,</span> <span class="token class-name">MatchTargetWeightMask</span> weightMask<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">float</span></span> startNormalizedTime<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">float</span></span> targetNormalizedTime<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>如何使用：<br>使你的targetBodyPart（你想要动的身体部位）在你执行的动作的开始时间startNormalizedTime到最终时间targetNormalizedTime之间，移向目标地方matchRotation,matchPosition（目标地点的位置和旋转值）并且你需要定下一个weightMask（x,y,x方向上的权重）去移动</li><li><strong>用于攀爬和移动之类，用途广泛</strong></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相对路径及根目录还有斜杠与反斜杠的区别</title>
      <link href="/2022/04/09/xiang-dui-lu-jing-ji-gen-mu-lu-huan-you-xie-gang-yu-fan-xie-gang-de-qu-bie/"/>
      <url>/2022/04/09/xiang-dui-lu-jing-ji-gen-mu-lu-huan-you-xie-gang-yu-fan-xie-gang-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="相对路径的表示"><a href="#相对路径的表示" class="headerlink" title="相对路径的表示"></a>相对路径的表示</h2></blockquote><ul><li>./表示的是当前层级</li><li>../表示的是上一级</li><li>.的个数减一就是往前几级</li><li>如果不填什么层级直接就打文件名，那么就会以根目录(即exe程序所在路径，或者为sln文件所在路径)为基准往下找，直到找到这个文件为止。</li><li>例如：<br><img src="https://img-blog.csdnimg.cn/cd42b624454346458a5539df9f7705df.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_19,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li></ul><p><em><strong>注意：这个往下只是根目录往下，当然也只有你不写层级的时候才会这么找，其他的就不行</strong></em></p><blockquote><h2 id="“-x2F-“与”-“"><a href="#“-x2F-“与”-“" class="headerlink" title="“/“与”\“"></a>“/“与”\“</h2></blockquote><ul><li>“\“在代码中这个是转义字符所以写地址的时候要写”\\“</li><li>“/“写地址是时候如果为斜杠则只用写一个</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 细节问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的使用与说明</title>
      <link href="/2022/04/09/git-de-shi-yong-yu-shuo-ming/"/>
      <url>/2022/04/09/git-de-shi-yong-yu-shuo-ming/</url>
      
        <content type="html"><![CDATA[<p>介绍Git的使用</p><h2 id="Git指令介绍"><a href="#Git指令介绍" class="headerlink" title="Git指令介绍"></a>Git指令介绍</h2><ul><li>git init （初始化仓库）</li><li>git add [.]            （全部文件加入暂存区,后面那个点改成文件名是将改文件名加入暂存）</li><li>git status   （得到当前git内部的状态）</li><li>touch ad.txt （给当前目录下增加一个叫ad的txt’文件）</li><li>git commit -m ‘此处写描述 ‘（将暂存区的文件放进本地仓库）</li><li>ls （查询当前仓库内的东西）</li><li>vi （打开文件写东西）</li><li>wp （关闭文件）</li><li>cat    ad.txt[文件名]（查看文件内容）</li><li>rm -rf ad.txt [文件名]  (删除该文件)</li><li>git rm ad.txt [文件名]  （在git中删除该文件）</li><li>git clone 仓库地址 （将此仓库地址的东西克隆到本地仓库）</li><li>git config -list （查询本地git软件内的信息。。包括个人信息和邮箱）</li><li>clear （清屏）</li><li>git config –global user.name ‘此处写github的用户名’ （初始化用户名）</li><li>git config –global user.email’此处写github的邮箱’ （初始化用户邮箱）</li><li>git remote add origin  [此处写你要上传的地址] （增加上传地址）</li><li>git push （全部上传）</li><li>git push -u origin main （将主分支上传）</li><li>git branch  （查看本地分支）</li><li>git branch -r （查看远程分支）</li><li>git branch [此处写分支名] （增加一个分支，名字自取）</li><li>git branch -d [分支名]  （删除指定分支）</li><li>git merge [分支名]  （合并指定分支到当前分支）</li><li>git ls-files （查看本地仓库内的文件）</li><li>git remote remove origin （断开远程连接）</li><li>git remote -v （查看远程仓库）</li><li>$ git push -u origin1 master （将origin1合并到master内）</li></ul><p>注意：蓝色的名字是你当前的分支<br><img src="https://img-blog.csdnimg.cn/da8d9162dea04c949b339da04137959c.png" alt="在这里插入图片描述"></p><blockquote><h2 id="Git-上传步骤"><a href="#Git-上传步骤" class="headerlink" title="Git 上传步骤"></a>Git 上传步骤</h2></blockquote><ul><li>首先把用户名和邮箱填上</li></ul><p><img src="https://img-blog.csdnimg.cn/6ffd7759d68c4824b9c015393c899cd6.png#pic_center" alt="在这里插入图片描述"></p><ul><li><p>然后获取公钥<br>使用   ssh-keygen -t rsa  指令在电脑里面.ssh 里面使用</p></li><li><p>ssh -T <a href="mailto:git@github.com">git@github.com</a></p></li><li><p>让git与github建立连接</p></li></ul><ol><li>先实例化本地仓库 使用git init</li><li>使用add 来加入暂存区</li><li>使用commit 放进仓库</li><li>使用remote 增加上传地址</li></ol><ul><li>注意格式为//不是/</li><li><img src="https://img-blog.csdnimg.cn/ffdbf26cb5ff44899f89e61bb1ba8621.png#pic_center" alt="在这里插入图片描述"></li></ul><ol start="5"><li>使用push上传</li></ol><blockquote><h2 id="GitHub-网站搭建"><a href="#GitHub-网站搭建" class="headerlink" title="GitHub 网站搭建"></a>GitHub 网站搭建</h2></blockquote><ol><li><p>在已经创建了的仓库内点击设置<br><img src="https://img-blog.csdnimg.cn/e09f3e31328842908022031cc2d0731f.png" alt="在这里插入图片描述"></p></li><li><p>进入page页面<br><img src="https://img-blog.csdnimg.cn/aba0d1078c034b7bb8fa57ee5e757962.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_9,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>点击下面按钮创建网页<img src="https://img-blog.csdnimg.cn/9d2228b86aa1436ca65c88dd6fb98d9c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>通过https://[用户名].github.io/[仓库名]/访问</p></li></ol><blockquote><h2 id="创建个人站点"><a href="#创建个人站点" class="headerlink" title="创建个人站点"></a>创建个人站点</h2></blockquote><ol><li>首先创建一个仓库（名字要为（[用户名].github.io））</li><li>在仓库里面创建一个叫index.html的文件<br>如图</li></ol><ul><li><p>创建仓库<br><img src="https://img-blog.csdnimg.cn/cafbaeebe1b546c4a4eedee19f966ab7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_17,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li><li><p>创建文件<br><img src="https://img-blog.csdnimg.cn/10e753904ba1409e853aa116d8d3a812.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_15,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p><strong>注意这个仓库里面只能有html文件</strong></p></li></ul><ol start="3"><li>通过[用户名].github.io访问</li></ol><ul><li><a href="https://www.bilibili.com/video/BV1Xx411m7kn?p=10">git的学习视频</a></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
