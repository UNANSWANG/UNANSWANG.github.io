<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>unity及cSharp学记笔记</title>
      <link href="/2022/04/15/unity-ji-csharp-xue-ji-bi-ji/"/>
      <url>/2022/04/15/unity-ji-csharp-xue-ji-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">TOC</a></p><blockquote><h2 id="1-设计模式六大原则"><a href="#1-设计模式六大原则" class="headerlink" title="1.设计模式六大原则"></a>1.设计模式六大原则</h2><p><strong>1.单一职责原则</strong><br>单一职责原则是实现高内聚、低耦合的指导方针，保持类中职责单一，方便拓展。<br><strong>2.开发封闭原则</strong><br>指对拓展开放，对修改封闭，使程序更好的更新他的功能。<br><strong>3.里氏替换原则</strong><br>所有的基类都能透明的使用其子类。<br>扩充:保持基类与子类的字段与方法一致可以使其用基类完美的使用子类实现多态，<br>如果子类有属于自己的独特方法，则需实例化子类而不是通过基类实例化。<br><strong>4.依赖倒转原则</strong><br>抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。<br><strong>5.迪米特原则</strong><br>一个类与另一个类发生联系使用第三个类进行沟通，减少类与类之间的聚合。<br><strong>6.合成聚合复用原则</strong><br>能使用聚合就不去使用继承，提高代码的复用和灵活性。<br><em><strong>总结：六大原则都是为了“弱耦合，强聚合”服务。</strong></em></p><h2 id="2-好用的单例模式"><a href="#2-好用的单例模式" class="headerlink" title="2.好用的单例模式"></a>2.好用的单例模式</h2></blockquote><p> 对于unity中的场景切换，我们经常会需要使用一些切换场景后依旧可以使用甚至是从其他场景<br> 继承过来变量的值，这时可以使用函数</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DontDestroyOnLoad(Object Target);<span class="comment">//切换场景时不会被清除</span></span><br></pre></td></tr></tbody></table></figure><p>使变量唯一便可使用单例模式，代码如下:</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> GameManager Instance;<span class="comment">//单例模式只让存在一个</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()<span class="comment">//在启动时检查</span></span></span><br><span class="line">{</span><br><span class="line">    CheckGameobject();</span><br><span class="line">    CheckSingle();</span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckGameobject</span>()<span class="comment">//删掉tag不是GM的Gamemanger</span></span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (tag==<span class="string">"GM"</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    Destroy(<span class="keyword">this</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckSingle</span>()<span class="comment">//删掉多余的GameManager</span></span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (Instance==<span class="literal">null</span>)</span><br><span class="line">    {</span><br><span class="line">        Instance = <span class="keyword">this</span>;</span><br><span class="line">        DontDestroyOnLoad(gameObject);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    Destroy(<span class="keyword">this</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><h2 id="3-unity粒子效果的使用"><a href="#3-unity粒子效果的使用" class="headerlink" title="3.unity粒子效果的使用"></a>3.unity粒子效果的使用</h2><p>1.细节提示<br><img src="https://img-blog.csdnimg.cn/af82bea603fd4ebb9beb275e3dd7bf96.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>1处调小可以使图标变小（例如摄像机图标）<br>2处可以不显示边框<br>一，最主要的设置界面<br><img src="https://img-blog.csdnimg.cn/c72aa9f48a6848d99375f12e56419000.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_7,color_FFFFFF,t_70,g_se,x_16#pic_center"><br>Duration 为粒子效果的持续时间<br>Looping 为是否循环<br>Start 为单个粒子的生命周期（可以存在的时间）<br>Start Speed 为粒子开始时的速度 为0可以让粒子停留在原处<br>Max Particals 为生成的最大粒子数<br>二，Render（渲染，着色）<br><img src="https://img-blog.csdnimg.cn/72b88b4ae5974c308da501d1b2919c0e.png#pic_center" alt="在这里插入图片描述"><br>放入材质球可以让粒子改变样式，像什么光阵之类的都能更改<br>三，随着时间使粒子变化大小<br><img src="https://img-blog.csdnimg.cn/549df0eb68cb403aa6fc44b44903b333.png#pic_center" alt="在这里插入图片描述"><br>调节曲线来实现大小的变换</p></blockquote><blockquote><h2 id="4-拓展Tarnsform使用深度优先算法"><a href="#4-拓展Tarnsform使用深度优先算法" class="headerlink" title="4.拓展Tarnsform使用深度优先算法"></a>4.拓展Tarnsform使用深度优先算法</h2><p>代码如下：</p></blockquote><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Transform <span class="title">DeepFind</span>(<span class="params"><span class="keyword">this</span> Transform parent,<span class="built_in">string</span> TargetName</span>)<span class="comment">//深度优先查找</span></span></span><br><span class="line">   {</span><br><span class="line">       Transform TeamTransform = <span class="literal">null</span>;</span><br><span class="line">       <span class="keyword">foreach</span> (Transform child <span class="keyword">in</span> parent)</span><br><span class="line">       {</span><br><span class="line">           <span class="keyword">if</span> (child.name==TargetName)</span><br><span class="line">           {</span><br><span class="line">               <span class="keyword">return</span> child;</span><br><span class="line">           }</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           {</span><br><span class="line">               TeamTransform = DeepFind(child,TargetName);</span><br><span class="line">               <span class="keyword">if</span> (TeamTransform!=<span class="literal">null</span>)</span><br><span class="line">               {</span><br><span class="line">                   <span class="keyword">return</span> TeamTransform;</span><br><span class="line">               }</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><p>使用方法如下代码所示：</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GameObject WHR; </span><br><span class="line"> WHR = transform.DeepFind(<span class="string">"WeaponHandleR"</span>).gameObject;<span class="comment">//以自身作为父物体往下面找weaponHandleR</span></span><br></pre></td></tr></tbody></table></figure><blockquote><h2 id="5-this的拓展作用"><a href="#5-this的拓展作用" class="headerlink" title="5.this的拓展作用"></a>5.this的拓展作用</h2><p>代码依旧为上一个代码，</p></blockquote><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Helper</span> </span><br><span class="line"></span><br><span class="line">{ </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetSex</span>(<span class="params"><span class="keyword">this</span> Person item</span>)</span> </span><br><span class="line"></span><br><span class="line">    { </span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> item.Sex; </span><br><span class="line"></span><br><span class="line">    } </span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//调用：</span></span><br><span class="line"></span><br><span class="line">Person person = <span class="keyword">new</span> Person(); </span><br><span class="line"></span><br><span class="line">person.GetSex();</span><br></pre></td></tr></tbody></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gcd最大公约数</title>
      <link href="/2022/04/15/gcd-zui-da-gong-yue-shu/"/>
      <url>/2022/04/15/gcd-zui-da-gong-yue-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="gcd函数"><a href="#gcd函数" class="headerlink" title="gcd函数"></a>gcd函数</h1><blockquote><p><em><strong>10进制取gcd</strong></em></p></blockquote><p>首先来个简单的gcd函数（递归的），应该一看就懂，这边就不讲了。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{</span><br><span class="line">    <span class="keyword">return</span> a%b==<span class="number">0</span>?b:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>下面是优化，跟上面原理差不多，但是复杂度低一点。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">( <span class="type">int</span> a , <span class="type">int</span> b )</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>( b , a%b ) ;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p><em><strong>二进制取gcd</strong></em><br>从王玉大佬那学的,要是连王玉大佬都不知道，那你就是白学了QAQ</p></blockquote><p>首先引入一个概念，“^”符号，是把一个十进制数，按位取异或。<br>举个栗子；<br>                 5   二进制为00101<br>                  9   二进制为01001<br>                   取异或以后为01100<br>                   为12<br>                   下面是用二进制将两数交换，属于快进快读，因为二进制算的比十进制快。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">( <span class="type">int</span> &amp;a , <span class="type">int</span> &amp;b )</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    a=a^b;</span><br><span class="line">    b=a^b;</span><br><span class="line">    a=a^b;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后用这个进行运算gcd函数</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{</span><br><span class="line"><span class="keyword">while</span>(b=^a=^b^=a%=b);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line"><span class="comment">//先取a和b的余数，再用二进制交换的法则进行</span></span><br><span class="line"><span class="comment">//和前面十进制的运算法则是一样的</span></span><br><span class="line"><span class="comment">//返回a是因为a%b==0但是a和b交换了，所以返回a的值等于返回之前b的值</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> c++ </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>错排兼排列组合公式</title>
      <link href="/2022/04/15/cuo-pai-jian-pai-lie-zu-he-gong-shi/"/>
      <url>/2022/04/15/cuo-pai-jian-pai-lie-zu-he-gong-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="错排"><a href="#错排" class="headerlink" title="错排"></a>错排</h1><p><strong>&gt; 概念</strong></p><p>首先引进一个概念，什么是错排；<br>错排就是讲一个有顺序的数组，其中的每个数，排列后不在原本的位置。<br>例如 1  2  3  4  5<br>其中1不能放在第一个地方，2不能放在第二个地方，以此类推。<br>这里有张图给你理解接下来要给出的公式<br>如果想更好理解的话这里有个链接<br><a href="https://blog.csdn.net/RIPKEY/article/details/115471365">黑谷小健</a>                          莫哥yyds<br><img src="https://img-blog.csdnimg.cn/20210415211107909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzU0NzU2NTkx,size_16,color_FFFFFF,t_70#pic_center"></p><blockquote><p>公式</p></blockquote><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> dp[<span class="number">25</span>];</span><br><span class="line">          dp[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">          dp[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">3</span>;i&lt;=n;i++)<span class="comment">//因为前两个要预存所以从三开始</span></span><br><span class="line">        dp[i]=(i<span class="number">-1</span>)*(dp[i<span class="number">-1</span>]+dp[i<span class="number">-2</span>]);</span><br></pre></td></tr></tbody></table></figure><p>对于错排我们运用公式就行</p><blockquote><p>组合的计算</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210415211544927.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210415211640663.png" alt="在这里插入图片描述"><br>所以我们可以算n，m，n-m的阶乘来求</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> mo=<span class="number">1</span>,zi=<span class="number">1</span>,z2=<span class="number">1</span>,z3=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//这是n的阶乘</span></span><br><span class="line">                   mo*=i;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=(n-m);i++)<span class="comment">//n-m的阶乘</span></span><br><span class="line">                   z2*=i;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)<span class="comment">//m的阶乘</span></span><br><span class="line">                    z3*=i;</span><br></pre></td></tr></tbody></table></figure><blockquote><p>这是一道错排题（统计学生成绩的）</p></blockquote><p>题目大意，给定一个学生数，有n名学生，1≤n≤15，克总讲所有学生的成绩排名统计错了</p><p>我们可以假设正确顺序为1 2 3 ……，或者任意顺序来进行错排。<br>代码如下</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bug(a) cout&lt;&lt;endl&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    ll n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    ll dis[<span class="number">30</span>];</span><br><span class="line">    dis[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    dis[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;=n;i++){</span><br><span class="line">    dis[i]=(i<span class="number">-1</span>)*(dis[i<span class="number">-2</span>]+dis[i<span class="number">-1</span>]);</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;dis[n]&lt;&lt;endl;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输入<br>3<br>输出<br>2</p><p>n=3时，有两种情况：<br>3 1 2<br>2 3 1</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赫夫曼树（最优二叉树）</title>
      <link href="/2022/04/15/he-fu-man-shu-zui-you-er-cha-shu/"/>
      <url>/2022/04/15/he-fu-man-shu-zui-you-er-cha-shu/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="赫夫曼树介绍"><a href="#赫夫曼树介绍" class="headerlink" title="赫夫曼树介绍"></a>赫夫曼树介绍</h1><p><strong>概念</strong><br>赫夫曼树是最优二叉树的别名，他通过每个叶子节点算权值和，取最小权值和的那棵树便是哈夫曼树。<br><strong>如何实现</strong><br>将所有数排成一个数组内，找到其质量（他的价值）最小的两个，将其合成一颗树，左边是最小的，右边是第二小的，然后将其质量相加便是这颗新树的质量。然后再次搜索，找到质量最小的两个，一直往复直到只剩下一棵树，那便是哈夫曼树。</p></blockquote><p><strong>代码如下：</strong></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span><span class="comment">//这是输出格式的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bug(a) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bugg(a,b) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;<span class="string">' '</span>&lt;&lt;b&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> buggg(a,b,c) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;<span class="string">' '</span>&lt;&lt;b&lt;&lt;<span class="string">' '</span>&lt;&lt;c&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 0x3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1000</span>;</span><br><span class="line"><span class="type">int</span> arr[M];</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">{</span><br><span class="line"><span class="type">int</span> wei;</span><br><span class="line"><span class="type">int</span> fa, l, r;</span><br><span class="line"><span class="type">char</span>* code;</span><br><span class="line">}banode, * bitree;<span class="comment">//创建这个数组的结构体指针方便运用</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mi</span><span class="params">(bitree&amp; s, <span class="type">int</span> n, <span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span> </span>{<span class="comment">//将这个数组和已经运算到的长度（注：是会随着你的运算增大不是不变的）</span></span><br><span class="line"><span class="type">int</span> i, j, k;<span class="comment">//还有最小的两个值通过引用变量来带出</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++) {<span class="comment">//这里不能等于n，因为n是我们要得到值的位置，现在还是没有值的</span></span><br><span class="line"><span class="keyword">if</span> (s[i].fa == <span class="number">0</span>) {<span class="comment">//找到第一个没父母节点的</span></span><br><span class="line">a = i;<span class="comment">//将其坐标赋值给a</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line"><span class="keyword">if</span> (s[i].fa == <span class="number">0</span> &amp;&amp; s[i].wei &lt; s[a].wei)a = i;<span class="comment">//然后搜索最小的质量并将其坐标赋值给a</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">1</span>; k &lt; n; k++) {</span><br><span class="line"><span class="keyword">if</span> (s[k].fa == <span class="number">0</span> &amp;&amp; k != a) {<span class="comment">//与之前一样找到第一个没父母节点的</span></span><br><span class="line">b = k;<span class="comment">//并将其坐标赋值给b</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">1</span>; k &lt; n; k++) {</span><br><span class="line"><span class="keyword">if</span> (s[k].fa == <span class="number">0</span> &amp;&amp; s[k].wei &lt; s[b].wei &amp;&amp; k != a)b = k;<span class="comment">//找到除坐标等于a的外最小的位置</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">hfm</span><span class="params">(bitree&amp; s, <span class="type">int</span> arr[], <span class="type">int</span> n)</span> </span>{<span class="comment">//将要建立的哈夫曼树的数组和初始数组以及长度放进去</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n - <span class="number">1</span>; i++) {<span class="comment">//因为从一开始所以可以赋值为0</span></span><br><span class="line">s[i].fa = <span class="number">0</span>;</span><br><span class="line">s[i].l = <span class="number">0</span>;</span><br><span class="line">s[i].r = <span class="number">0</span>;</span><br><span class="line">s[i].wei = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) {<span class="comment">//输入质量</span></span><br><span class="line">s[i].wei = arr[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (i = n + <span class="number">1</span>; i &lt;= <span class="number">2</span> * n - <span class="number">1</span>; i++) {<span class="comment">//下面是哈夫曼树的判断之前讲了</span></span><br><span class="line"><span class="type">int</span> mil, mir;</span><br><span class="line"><span class="built_in">mi</span>(s, i, mil, mir);</span><br><span class="line">s[mil].fa = i;</span><br><span class="line">s[mir].fa = i;</span><br><span class="line">s[i].l = mil;</span><br><span class="line">s[i].r = mir;</span><br><span class="line">s[i].wei = s[mil].wei + s[mir].wei;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">out</span><span class="params">(bitree s, <span class="type">const</span> <span class="type">int</span> t)</span> </span>{</span><br><span class="line">cout &lt;&lt; <span class="string">"位置  质量  父母节点  左孩子  右孩子    赫夫曼编码"</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; left;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; i++) {</span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">5</span>) &lt;&lt; i &lt;&lt; <span class="string">" "</span>;<span class="comment">//这个节点所在位置</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">7</span>) &lt;&lt; s[i].wei &lt;&lt; <span class="string">" "</span>;<span class="comment">//输出其质量</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">7</span>) &lt;&lt; s[i].fa &lt;&lt; <span class="string">" "</span>;<span class="comment">//父母节点位置</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">7</span>) &lt;&lt; s[i].l &lt;&lt; <span class="string">" "</span>;<span class="comment">//左孩子位置</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; s[i].r ;<span class="comment">//输出右孩子位置</span></span><br><span class="line"><span class="keyword">if</span> (i &lt;= (t + <span class="number">1</span>) / <span class="number">2</span>)<span class="keyword">for</span> (<span class="type">int</span> j = <span class="built_in">strlen</span>(s[i].code) - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) {</span><br><span class="line">cout &lt;&lt; s[i].code[j];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">"无赫夫曼编码"</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pre</span><span class="params">(bitree s,<span class="type">int</span> n)</span> </span>{<span class="comment">//将赫夫曼编码弄出来</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line"><span class="type">int</span> j = i,k=<span class="number">0</span>;</span><br><span class="line">s[i].code = <span class="keyword">new</span> <span class="type">char</span>[n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (s[j].fa) {</span><br><span class="line"><span class="keyword">if</span> (s[s[j].fa].l==j) {如果父母节点的左孩子坐标等于这个坐标，那就是左孩子</span><br><span class="line">s[i].code[k++] = <span class="string">'0'</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> s[i].code[k++] = <span class="string">'1'</span>;</span><br><span class="line">j = s[j].fa;</span><br><span class="line">}</span><br><span class="line">s[i].code[k] = <span class="string">'\0'</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bitree s;</span><br><span class="line"><span class="type">int</span> n, i;</span><br><span class="line">cout &lt;&lt; <span class="string">"输入数组长度："</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">cout &lt;&lt; <span class="string">"输入赫夫曼数的数组:"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; arr[i];<span class="comment">//下面的有2n-1个</span></span><br><span class="line">s = <span class="keyword">new</span> banode[<span class="number">2</span> * n];<span class="comment">//创建空间，记得多创一个因为我们这个是从1开始的</span></span><br><span class="line"><span class="built_in">hfm</span>(s, arr, n);</span><br><span class="line"><span class="built_in">pre</span>(s, n);</span><br><span class="line"><span class="built_in">out</span>(s, <span class="number">2</span> * n - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>测试数据：</strong><br>8<br>5 29 7 8 14 23 3 11<br><strong>输出：</strong></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">输入数组长度：</span><br><span class="line"><span class="number">8</span></span><br><span class="line">输入赫夫曼数的数组:</span><br><span class="line"><span class="number">5</span> <span class="number">29</span> <span class="number">7</span> <span class="number">8</span> <span class="number">14</span> <span class="number">23</span> <span class="number">3</span> <span class="number">11</span></span><br><span class="line">位置  质量  父母节点  左孩子  右孩子    赫夫曼编码</span><br><span class="line"><span class="number">1</span>     <span class="number">5</span>       <span class="number">9</span>       <span class="number">0</span>       <span class="number">0</span>         <span class="number">0001</span></span><br><span class="line"><span class="number">2</span>     <span class="number">29</span>      <span class="number">14</span>      <span class="number">0</span>       <span class="number">0</span>         <span class="number">10</span></span><br><span class="line"><span class="number">3</span>     <span class="number">7</span>       <span class="number">10</span>      <span class="number">0</span>       <span class="number">0</span>         <span class="number">1110</span></span><br><span class="line"><span class="number">4</span>     <span class="number">8</span>       <span class="number">10</span>      <span class="number">0</span>       <span class="number">0</span>         <span class="number">1111</span></span><br><span class="line"><span class="number">5</span>     <span class="number">14</span>      <span class="number">12</span>      <span class="number">0</span>       <span class="number">0</span>         <span class="number">110</span></span><br><span class="line"><span class="number">6</span>     <span class="number">23</span>      <span class="number">13</span>      <span class="number">0</span>       <span class="number">0</span>         <span class="number">01</span></span><br><span class="line"><span class="number">7</span>     <span class="number">3</span>       <span class="number">9</span>       <span class="number">0</span>       <span class="number">0</span>         <span class="number">0000</span></span><br><span class="line"><span class="number">8</span>     <span class="number">11</span>      <span class="number">11</span>      <span class="number">0</span>       <span class="number">0</span>         <span class="number">001</span></span><br><span class="line"><span class="number">9</span>     <span class="number">8</span>       <span class="number">11</span>      <span class="number">7</span>       <span class="number">1</span>         无赫夫曼编码</span><br><span class="line"><span class="number">10</span>    <span class="number">15</span>      <span class="number">12</span>      <span class="number">3</span>       <span class="number">4</span>         无赫夫曼编码</span><br><span class="line"><span class="number">11</span>    <span class="number">19</span>      <span class="number">13</span>      <span class="number">9</span>       <span class="number">8</span>         无赫夫曼编码</span><br><span class="line"><span class="number">12</span>    <span class="number">29</span>      <span class="number">14</span>      <span class="number">5</span>       <span class="number">10</span>        无赫夫曼编码</span><br><span class="line"><span class="number">13</span>    <span class="number">42</span>      <span class="number">15</span>      <span class="number">11</span>      <span class="number">6</span>         无赫夫曼编码</span><br><span class="line"><span class="number">14</span>    <span class="number">58</span>      <span class="number">15</span>      <span class="number">2</span>       <span class="number">12</span>        无赫夫曼编码</span><br><span class="line"><span class="number">15</span>    <span class="number">100</span>     <span class="number">0</span>       <span class="number">13</span>      <span class="number">14</span>        无赫夫曼编码</span><br></pre></td></tr></tbody></table></figure><p>给个链接——&gt;<a href="https://www.cnblogs.com/smile233/p/8184492.html">我是在这学的</a></p><blockquote><h1 id="给道例题"><a href="#给道例题" class="headerlink" title="给道例题"></a>给道例题</h1><p>题目打出来不好看就直接给链接了<br>—-&gt;<a href="https://www.luogu.com.cn/problem/P1090">摘果子（洛谷）</a><br>就是要我们求搬运的和的最小，就是权的和。<br>不过我一开始不是那么想的，我想的是除了根节点以外所有节点的和，结果答案是对的，相当于说明了这个也可以求出权值。<br><strong>下面是代码</strong>（跟之前的代码基本没区别，但是为了记忆这边建议重新手敲一遍，不然忘贼快）</p></blockquote><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bug(a) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bugg(a,b) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;<span class="string">' '</span>&lt;&lt;b&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> buggg(a,b,c) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;<span class="string">' '</span>&lt;&lt;b&lt;&lt;<span class="string">' '</span>&lt;&lt;c&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 0x3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">10005</span>;</span><br><span class="line"><span class="type">int</span> arr[M];</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> {</span><br><span class="line"><span class="type">int</span> wei;</span><br><span class="line"><span class="type">int</span> fa, l, r;</span><br><span class="line">}tree,*bitree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mi</span><span class="params">(bitree s,<span class="type">int</span> n,<span class="type">int</span> &amp;a,<span class="type">int</span> &amp;b)</span> </span>{</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line"><span class="keyword">if</span> (s[i].fa == <span class="number">0</span>) {</span><br><span class="line">a = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line"><span class="keyword">if</span> (s[i].fa == <span class="number">0</span> &amp;&amp; s[i].wei &lt; s[a].wei)a = i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; n; j++) {</span><br><span class="line"><span class="keyword">if</span> (s[j].fa == <span class="number">0</span> &amp;&amp; j != a)b = j;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; n; j++) {</span><br><span class="line"><span class="keyword">if</span> (s[j].fa == <span class="number">0</span> &amp;&amp; j != a &amp;&amp; s[j].wei &lt; s[b].wei)b = j;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">hfm</span><span class="params">(bitree&amp; s, <span class="type">int</span> arr[], <span class="type">int</span> n)</span> </span>{</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">s[i].wei = s[i].l = s[i].r = s[i].fa = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">s[i].wei = arr[i];</span><br><span class="line"><span class="keyword">for</span> (i = n + <span class="number">1</span>; i &lt;= <span class="number">2</span> * n - <span class="number">1</span>; i++) {</span><br><span class="line"><span class="type">int</span> ml, mr;</span><br><span class="line"><span class="built_in">mi</span>(s, i, ml, mr);</span><br><span class="line">s[ml].fa = i;</span><br><span class="line">s[mr]. fa = i;</span><br><span class="line">s[i].l = ml;</span><br><span class="line">s[i].r = mr;</span><br><span class="line">s[i].wei = s[ml].wei + s[mr].wei;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bitree s;</span><br><span class="line"><span class="type">int</span> n, i,ans=<span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">cin &gt;&gt; arr[i];</span><br><span class="line">ans += arr[i];</span><br><span class="line">}</span><br><span class="line">s = <span class="keyword">new</span> tree[<span class="number">2</span> * n];</span><br><span class="line"><span class="built_in">hfm</span>(s, arr, n);</span><br><span class="line"><span class="keyword">for</span> (i = n + <span class="number">1</span>; i &lt; <span class="number">2</span> * n - <span class="number">1</span>; i++) {</span><br><span class="line">ans += s[i].wei;</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全排列（超简单递归）</title>
      <link href="/2022/04/15/quan-pai-lie-chao-jian-dan-di-gui/"/>
      <url>/2022/04/15/quan-pai-lie-chao-jian-dan-di-gui/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="将n个数进行全排列"><a href="#将n个数进行全排列" class="headerlink" title="将n个数进行全排列"></a>将n个数进行全排列</h1><p>话不多说，直接给代码：</p></blockquote><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bug(a) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bugg(a,b) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;<span class="string">' '</span>&lt;&lt;b&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> buggg(a,b,c) (cout&lt;&lt;<span class="string">"*"</span>&lt;&lt;a&lt;&lt;<span class="string">' '</span>&lt;&lt;b&lt;&lt;<span class="string">' '</span>&lt;&lt;c&lt;&lt;endl)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 0x3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">5000</span>+ <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[M];</span><br><span class="line"><span class="type">bool</span> arr[M];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pre</span><span class="params">(<span class="type">int</span> pos)</span> </span>{</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">if</span> (pos == n + <span class="number">1</span>) {</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cout &lt;&lt; a[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line"><span class="keyword">if</span> (!arr[i]) {</span><br><span class="line">a[pos] = i;</span><br><span class="line">arr[i] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">pre</span>(pos + <span class="number">1</span>);</span><br><span class="line">arr[i] = <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">pre</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉树的非递归调用</title>
      <link href="/2022/04/15/er-cha-shu-de-fei-di-gui-diao-yong/"/>
      <url>/2022/04/15/er-cha-shu-de-fei-di-gui-diao-yong/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84">TOC</a></p><blockquote><h1 id="前序遍历"><a href="#前序遍历" class="headerlink" title="前序遍历"></a>前序遍历</h1><p>将左边孩子全放进栈并输出，遇到空的就访问栈的头节点的右孩子（如此往复直到找到有右孩子的节点。）<br><strong>代码如下：</strong></p></blockquote><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">presq</span><span class="params">(bitree s)</span> </span>{</span><br><span class="line">stack&lt;bitree&gt; t;</span><br><span class="line">bitree v;</span><br><span class="line">bitree k;</span><br><span class="line">v = s;</span><br><span class="line"><span class="keyword">while</span> (v||!t.<span class="built_in">empty</span>()) {</span><br><span class="line"><span class="keyword">if</span> (v) {</span><br><span class="line">cout &lt;&lt; v-&gt;e;</span><br><span class="line">t.<span class="built_in">push</span>(v);</span><br><span class="line">v = v-&gt;l;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line">v = t.<span class="built_in">top</span>()-&gt;r;</span><br><span class="line">t.<span class="built_in">pop</span>();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><h1 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h1><p>将左孩子全入栈（不输出），遇到空就将其输出并将头节点的右孩子赋值为下一个节点然后弹出头节点。<br><strong>代码如下</strong></p></blockquote><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">midsq</span><span class="params">(bitree s)</span> </span>{<span class="comment">//中序遍历</span></span><br><span class="line">stack&lt;bitree&gt; t;</span><br><span class="line">bitree v;</span><br><span class="line">v = s;</span><br><span class="line"><span class="keyword">while</span> (v || !t.<span class="built_in">empty</span>()) {</span><br><span class="line"><span class="keyword">if</span> (v) {</span><br><span class="line">t.<span class="built_in">push</span>(v); v = v-&gt;l;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line">cout &lt;&lt; t.<span class="built_in">top</span>()-&gt;e;</span><br><span class="line">v = t.<span class="built_in">top</span>()-&gt;r;</span><br><span class="line">t.<span class="built_in">pop</span>();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><h1 id="后序遍历"><a href="#后序遍历" class="headerlink" title="后序遍历"></a>后序遍历</h1><p>这个就比较复杂了，先将根节点放进栈，然后判断其左右孩子是否存在，要是都不存在，则输出或者其左孩子或右孩子是上个栈里面的节点，也输出，否则就将其右孩子和左孩子分别入栈。<br><strong>代码如下</strong></p></blockquote><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">forsq</span><span class="params">(bitree s)</span> </span>{</span><br><span class="line">stack&lt;bitree&gt; t;</span><br><span class="line">bitree v,c;</span><br><span class="line">c = <span class="literal">NULL</span>;</span><br><span class="line">t.<span class="built_in">push</span>(s);</span><br><span class="line"><span class="keyword">while</span> (!t.<span class="built_in">empty</span>()) {</span><br><span class="line">v = t.<span class="built_in">top</span>();</span><br><span class="line"><span class="keyword">if</span> ((!v-&gt;l &amp;&amp; !v-&gt;r) || (c != <span class="literal">NULL</span> &amp;&amp; (v-&gt;l == c ||v-&gt;r == c))) {</span><br><span class="line">cout &lt;&lt; v-&gt;e;</span><br><span class="line">t.<span class="built_in">pop</span>();</span><br><span class="line">c = v;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (v-&gt;r)t.<span class="built_in">push</span>(v-&gt;r);</span><br><span class="line"><span class="keyword">if</span> (v-&gt;l)t.<span class="built_in">push</span>(v-&gt;l);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><h1 id="树的高度"><a href="#树的高度" class="headerlink" title="树的高度"></a>树的高度</h1><p><strong>直接给代码，自己体会。。。。</strong></p></blockquote><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">hight</span><span class="params">(bitree s, <span class="type">int</span>&amp; ans2)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (s) {</span><br><span class="line"><span class="keyword">if</span> (!s-&gt;l &amp;&amp; !s-&gt;r)ans2 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="built_in">hight</span>(s-&gt;l, l);</span><br><span class="line"><span class="built_in">hight</span>(s-&gt;r, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; r)ans2 = l + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> ans2 = r + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> ans2;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>给个例子：</strong><br>如图：<br><img src="https://img-blog.csdnimg.cn/20210606201314692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzU0NzU2NTkx,size_16,color_FFFFFF,t_70#pic_center"><br><strong>输出以后是：</strong></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">abc  de g  f</span><br><span class="line">先根遍历</span><br><span class="line">abcdegf</span><br><span class="line">中根遍历</span><br><span class="line">cbegdfa</span><br><span class="line">后根遍历</span><br><span class="line">cgefdba</span><br></pre></td></tr></tbody></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AR和Vuforia</title>
      <link href="/2022/04/15/ar-he-vuforia/"/>
      <url>/2022/04/15/ar-he-vuforia/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="AR的使用（基础篇）"><a href="#AR的使用（基础篇）" class="headerlink" title="AR的使用（基础篇）"></a>AR的使用（基础篇）</h2></blockquote><ol><li><p>引入packageManager里面的<br><img src="https://img-blog.csdnimg.cn/682ab3a123ee45fcbf63f2f543f43db3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_10,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>添加AR专用的摄像头，并关闭原有摄像头<br><img src="https://img-blog.csdnimg.cn/b61c5443903c4863ba3568408e726a7e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_11,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>添加定位图片<br><img src="https://img-blog.csdnimg.cn/c6ffb0f467284e4d88b3ca60fe6f536a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>然后就将我们要在AR中显示的物体放到这个Image里面作为子物体就行</p><blockquote><h3 id="Image的更换（保姆级教学）"><a href="#Image的更换（保姆级教学）" class="headerlink" title="Image的更换（保姆级教学）"></a>Image的更换（保姆级教学）</h3></blockquote></li></ol><ul><li>如果我们不更换Image的话，系统就会使用Vuforia自带的图</li><li>更换的话可以进入<a href="https://developer.vuforia.com/">Vuforia</a><br><img src="https://img-blog.csdnimg.cn/40ef6bd4c3164040b1aa2876f972caf5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>步骤如下</li></ul><p>*1.<br> <img src="https://img-blog.csdnimg.cn/56f8c5aa49d14ac1852853c1f5c4c1da.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="](https://img-blog.csdnimg.cn/ba6a473834d6432885c1ba9cdab6b3b1.png)"></p><p>*2.<br><img src="https://img-blog.csdnimg.cn/4518ffe1fb184c4d93330481586ce5c0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_8,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*3.             <img src="https://img-blog.csdnimg.cn/7e4bb0d7b1ff48eea0db53d453f6a90f.png" alt="在这里插入图片描述"><br>*4. 点开他，会有一个秘钥，复制他，后面要用<img src="https://img-blog.csdnimg.cn/357e1d0deda14c48a8ec558aa310bd60.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*5. .进入另一个界面<br><img src="https://img-blog.csdnimg.cn/96e46b539e9a40d5af5b520b8088a704.png" alt="在这里插入图片描述"><br>*6. 添加数据库<img src="https://img-blog.csdnimg.cn/2232b728003e4873b9e7716e872f8680.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*7.<br><img src="https://img-blog.csdnimg.cn/6084342f655a46b08b9ca25e80d62059.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*8.<br><img src="https://img-blog.csdnimg.cn/2d27560fb4f64b5887cffa8d991dc849.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_15,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*9.<br><img src="https://img-blog.csdnimg.cn/e3cdc8f822504863b19b4d4e4f8482ba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><strong>注意这个宽度千万不要打像素宽度，这个宽度是图片在unity里面显示的大小</strong></li></ul><p>*10. <img src="https://img-blog.csdnimg.cn/08175f452b2749cf87991dd3f6287dd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*11.<br><img src="https://img-blog.csdnimg.cn/dce37bed29424e12ba8da1ef203a6171.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_8,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*12.<br><img src="https://img-blog.csdnimg.cn/99ca161f8ca04872a118b07b1d3ac628.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_9,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*13. 在AR摄像机下找到<br><img src="https://img-blog.csdnimg.cn/9ff14689e2a14ddeacb7eeffb871193f.png" alt="在这里插入图片描述"><br>*14. 添加之前复制的秘钥(参考第4点)<br><img src="https://img-blog.csdnimg.cn/227e47ab64fc4c71bffa65aa04f438c2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_8,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>*15. 再次添加Image会自动变成你添加的那个Image</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> unity </tag>
            
            <tag> AR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步编程详解</title>
      <link href="/2022/04/15/yi-bu-bian-cheng-xiang-jie/"/>
      <url>/2022/04/15/yi-bu-bian-cheng-xiang-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="异步调用的函数介绍及解释"><a href="#异步调用的函数介绍及解释" class="headerlink" title="异步调用的函数介绍及解释"></a>异步调用的函数介绍及解释</h2></blockquote><ol><li>AsyncCallback(IAsyncResult re) - - 回调函数（委托类型）<br>他的参数为异步结果这个异步结果可以为任何函数</li><li>IAsyncResult - - 接口类型函数<br>可以实现一些函数的赋值<br>例如：现在有一个委托</li></ol><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">double</span> <span class="title">AddDelegate</span>(<span class="params"><span class="built_in">int</span> nu</span>)</span>;<span class="comment">//取nu是更好的辨认</span></span><br></pre></td></tr></tbody></table></figure><p>当我们要给IAsyncResult赋值并且把他放入回调函数中<br>3. 可以使用BeginInvoke函数，他的返回值是IAsyncResult 类型<br>    <strong>并且他也是启动异步回调的函数</strong></p><p>我们可以写成</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IAsyncResult result = addDel.BeginInvoke(<span class="number">20</span>, callBack, <span class="number">10</span>);</span><br></pre></td></tr></tbody></table></figure><p>其中他的参数列表如下<br><img src="https://img-blog.csdnimg.cn/a293ea6f36db429a8281bc9ca5c79a88.png" alt="在这里插入图片描述"></p><ul><li>nu就是我们之前写的自定义函数AddDelegate中的参数为nu，如果我们这个自定义委托中有两个参数，那么就会是<br><img src="https://img-blog.csdnimg.cn/aad63022fec643de8ad255872d003f2c.png" alt="在这里插入图片描述"><br>前面会再加一个参数，相当于前面那一部分会是我们自定义委托的参数。</li><li>倒数第二个参数就是我们的回调函数，上图中的callBack是我们实例化的一个委托<br><img src="https://img-blog.csdnimg.cn/12d8189d3c1746e4ae205f0262e19535.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/0e0b9b584dc847688eff1fd1aa57ffb6.png" alt="在这里插入图片描述"><br>这个回调函数的委托中的参数为 IAsyncResult 类型</li><li>最后一个参数object是IAsyncResult 类型中的AsyncState<br>其中IAsyncResult接口内部为</li></ul><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IAsyncResult</span></span><br><span class="line">{</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// 摘要:</span></span><br><span class="line">    <span class="comment">//     Gets a user-defined object that qualifies or contains information about an asynchronous</span></span><br><span class="line">    <span class="comment">//     operation.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// 返回结果:</span></span><br><span class="line">    <span class="comment">//     A user-defined object that qualifies or contains information about an asynchronous</span></span><br><span class="line">    <span class="comment">//     operation.</span></span><br><span class="line">    <span class="built_in">object</span>? AsyncState { <span class="keyword">get</span>; }  <span class="comment">//这个就是我们的object参数赋的值</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// 摘要:</span></span><br><span class="line">    <span class="comment">//     Gets a System.Threading.WaitHandle that is used to wait for an asynchronous operation</span></span><br><span class="line">    <span class="comment">//     to complete.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// 返回结果:</span></span><br><span class="line">    <span class="comment">//     A System.Threading.WaitHandle that is used to wait for an asynchronous operation</span></span><br><span class="line">    <span class="comment">//     to complete.</span></span><br><span class="line">    WaitHandle AsyncWaitHandle { <span class="keyword">get</span>; }</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// 摘要:</span></span><br><span class="line">    <span class="comment">//     Gets a value that indicates whether the asynchronous operation completed synchronously.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// 返回结果:</span></span><br><span class="line">    <span class="comment">//     true if the asynchronous operation completed synchronously; otherwise, false.</span></span><br><span class="line">    <span class="built_in">bool</span> CompletedSynchronously { <span class="keyword">get</span>; }</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// 摘要:</span></span><br><span class="line">    <span class="comment">//     Gets a value that indicates whether the asynchronous operation has completed.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// 返回结果:</span></span><br><span class="line">    <span class="comment">//     true if the operation is complete; otherwise, false.</span></span><br><span class="line">    <span class="built_in">bool</span> IsCompleted { <span class="keyword">get</span>; }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>EndInvoke(IAsyncResult re) 函数<br>他的返回的是re的函数的返回结果，当然他的主要作用的用来阻塞异步调用，<br>如果我们的re函数为<br><img src="https://img-blog.csdnimg.cn/676f7bcda829462ba1e304bf2f3b1b8b.png" alt="在这里插入图片描述"><br>那么这个函数的返回类型就是double且结果为之前在BeginInvoke函数中参数传递后的结果。<blockquote><h2 id="异步编程"><a href="#异步编程" class="headerlink" title="异步编程"></a>异步编程</h2></blockquote></li></ul><ol><li>函数介绍 BeginAccept（AsyncCallback asyncCallback，Ojbectstate）<br><img src="https://img-blog.csdnimg.cn/4ddd7b5b946e4f2bb9ef0c8548a64cf1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_13,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li></ol><p><strong>跟BeginInvoke很像，都是一样的</strong>。只是这个是在异步编程传输数据的时候使用</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java小游戏之飞机大战</title>
      <link href="/2022/04/15/java-xiao-you-xi-zhi-fei-ji-da-zhan/"/>
      <url>/2022/04/15/java-xiao-you-xi-zhi-fei-ji-da-zhan/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="飞机大战脚本组成"><a href="#飞机大战脚本组成" class="headerlink" title="飞机大战脚本组成"></a>飞机大战脚本组成</h2><p>1.有一个所有物体的父物体GameObject，然后就是一堆物体继承于他，等到他的属性于函数。<br>2.窗口组件<br>3.工具脚本(负责做一些杂事和存放图片)</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2></blockquote><ol><li>GameObject</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> utils.GameWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameObject</span> {</span><br><span class="line">    <span class="keyword">public</span> Image image;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> y;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> width;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> height;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> speed;</span><br><span class="line">    <span class="keyword">public</span> GameWindow fram;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Image <span class="title function_">getImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setImage</span><span class="params">(Image image)</span> {</span><br><span class="line">        <span class="built_in">this</span>.image = image;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getX</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setX</span><span class="params">(<span class="type">int</span> x)</span> {</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getY</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setY</span><span class="params">(<span class="type">int</span> y)</span> {</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getWidth</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> width;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWidth</span><span class="params">(<span class="type">int</span> width)</span> {</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getHeight</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHeight</span><span class="params">(<span class="type">int</span> height)</span> {</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSpeed</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> speed;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSpeed</span><span class="params">(<span class="type">double</span> speed)</span> {</span><br><span class="line">        <span class="built_in">this</span>.speed = speed;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> GameWindow <span class="title function_">getFram</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> fram;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFram</span><span class="params">(GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">this</span>.fram = fram;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameObject</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">this</span>.image = image;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">        <span class="built_in">this</span>.speed = speed;</span><br><span class="line">        <span class="built_in">this</span>.fram = fram;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameObject</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">double</span> speed)</span> {</span><br><span class="line">        <span class="built_in">this</span>.image = image;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.speed = speed;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameObject</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height)</span> {</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameObject</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> {</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameObject</span><span class="params">()</span> {<span class="comment">//无参构造</span></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span>{</span><br><span class="line">        gImage.drawImage(image,x,y,<span class="literal">null</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> Rectangle <span class="title function_">getRec</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Rectangle</span>(x,y,width,height);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>背景</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> utils.GameWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">bgObj</span> <span class="keyword">extends</span> <span class="title class_">GameObject</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">bgObj</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, width, height, speed, fram);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">bgObj</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">double</span> speed)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, speed);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">bgObj</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Image <span class="title function_">getImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span> {</span><br><span class="line">        <span class="built_in">super</span>.paintSelf(gImage);</span><br><span class="line">        <span class="comment">//y+=speed;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>玩家</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> utils.GameWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Plane</span> <span class="keyword">extends</span> <span class="title class_">GameObject</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Image <span class="title function_">getImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Plane</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, width, height, speed, fram);</span><br><span class="line">        fram.addMouseMotionListener(<span class="keyword">new</span> <span class="title class_">MouseAdapter</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mouseMoved</span><span class="params">(MouseEvent e)</span> {<span class="comment">//跟随鼠标移动</span></span><br><span class="line">                Plane.<span class="built_in">super</span>.x=e.getX()-<span class="number">11</span>;<span class="comment">//鼠标位置减去飞机位置的一半相当于鼠标在飞机中间</span></span><br><span class="line">                Plane.<span class="built_in">super</span>.y=e.getY()-<span class="number">16</span>;</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Plane</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">double</span> speed)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, speed);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Plane</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span> {</span><br><span class="line">        gImage.drawImage(image,x,y,width,height,<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//与敌方boss碰撞死亡</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.fram.bossObj!=<span class="literal">null</span>&amp;&amp;<span class="built_in">this</span>.getRec().intersects(<span class="built_in">this</span>.fram.bossObj.getRec())){</span><br><span class="line">            <span class="built_in">this</span>.fram.state=<span class="number">3</span>;</span><br><span class="line">            <span class="built_in">this</span>.fram.repaint();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Rectangle <span class="title function_">getRec</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getRec();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>子弹</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> utils.GameUtils;</span><br><span class="line"><span class="keyword">import</span> utils.GameWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">shellObj</span> <span class="keyword">extends</span> <span class="title class_">GameObject</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Image <span class="title function_">getImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">shellObj</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, width, height, speed, fram);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">shellObj</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span> {</span><br><span class="line">        gImage.drawImage(image,x,y,width,height,<span class="literal">null</span>);</span><br><span class="line">        y-=speed;</span><br><span class="line">        <span class="keyword">if</span> (y&lt;<span class="number">0</span>){</span><br><span class="line">            <span class="built_in">this</span>.x=<span class="number">100</span>;</span><br><span class="line">            <span class="built_in">this</span>.y=-<span class="number">100</span>;</span><br><span class="line">            GameUtils.removeObjList.add(<span class="built_in">this</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Rectangle <span class="title function_">getRec</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getRec();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="5"><li>敌机</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> utils.GameUtils;</span><br><span class="line"><span class="keyword">import</span> utils.GameWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">enemyObj</span> <span class="keyword">extends</span> <span class="title class_">GameObject</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Image <span class="title function_">getImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">enemyObj</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, width, height, speed, fram);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">enemyObj</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span> {</span><br><span class="line">        gImage.drawImage(image,x,y,width,height,<span class="literal">null</span>);</span><br><span class="line">        y+=speed;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.getRec().intersects(<span class="built_in">this</span>.fram.planeObj.getRec())){</span><br><span class="line">            GameWindow.state=<span class="number">3</span>;</span><br><span class="line">            <span class="built_in">this</span>.fram.repaint();<span class="comment">//重画一帧</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (shellObj item: GameUtils.shellObjList) {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.getRec().intersects(item.getRec())){</span><br><span class="line">                ExplodeObj obj=<span class="keyword">new</span> <span class="title class_">ExplodeObj</span>(x,y,<span class="number">40</span>,<span class="number">40</span>);</span><br><span class="line">                GameUtils.explodeObjList.add(obj);</span><br><span class="line">                GameUtils.removeObjList.add(obj);</span><br><span class="line">                item.setX(<span class="number">100</span>);</span><br><span class="line">                item.setY(-<span class="number">100</span>);</span><br><span class="line">                <span class="built_in">this</span>.x=-<span class="number">100</span>;</span><br><span class="line">                <span class="built_in">this</span>.y=-<span class="number">100</span>;</span><br><span class="line">                GameUtils.removeObjList.add(item);</span><br><span class="line">                GameUtils.removeObjList.add(<span class="built_in">this</span>);</span><br><span class="line">                GameWindow.score++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (y&gt;<span class="number">600</span>){</span><br><span class="line">            <span class="built_in">this</span>.x=-<span class="number">100</span>;</span><br><span class="line">            <span class="built_in">this</span>.y=-<span class="number">100</span>;</span><br><span class="line">            GameUtils.removeObjList.add(<span class="built_in">this</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Rectangle <span class="title function_">getRec</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getRec();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="6"><li>敌方boss</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> utils.GameUtils;</span><br><span class="line"><span class="keyword">import</span> utils.GameWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BossObj</span> <span class="keyword">extends</span> <span class="title class_">GameObject</span>{</span><br><span class="line">    <span class="type">int</span> life=<span class="number">10</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Image <span class="title function_">getImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BossObj</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, width, height, speed, fram);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BossObj</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span> {</span><br><span class="line">        gImage.drawImage(image,x,y,width,height,<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (x&gt;<span class="number">485</span>||x&lt;-<span class="number">40</span>){</span><br><span class="line">            speed=-speed;</span><br><span class="line">        }</span><br><span class="line">        x+=speed;</span><br><span class="line">        <span class="keyword">for</span> (shellObj item: GameUtils.shellObjList) {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.getRec().intersects(item.getRec())){</span><br><span class="line">                item.setX(<span class="number">100</span>);</span><br><span class="line">                item.setY(-<span class="number">100</span>);</span><br><span class="line">                GameUtils.removeObjList.add(item);</span><br><span class="line">                life--;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (life&lt;=<span class="number">0</span>){</span><br><span class="line">                GameUtils.removeObjList.add(<span class="built_in">this</span>);</span><br><span class="line">                GameWindow.state=<span class="number">4</span>;</span><br><span class="line">                <span class="built_in">this</span>.fram.repaint();<span class="comment">//重画一帧</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//血条的白色背景</span></span><br><span class="line">        gImage.setColor(Color.white);</span><br><span class="line">        gImage.fillRect(<span class="number">20</span>,<span class="number">40</span>,<span class="number">100</span>,<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//红血条的绘制</span></span><br><span class="line">        gImage.setColor(Color.red);</span><br><span class="line">        gImage.fillRect(<span class="number">20</span>,<span class="number">40</span>,life*<span class="number">100</span>/<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Rectangle <span class="title function_">getRec</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getRec();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="7"><li>敌方子弹</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> utils.GameUtils;</span><br><span class="line"><span class="keyword">import</span> utils.GameWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BulletObj</span> <span class="keyword">extends</span> <span class="title class_">GameObject</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Image <span class="title function_">getImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BulletObj</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, width, height, speed, fram);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BulletObj</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span> {</span><br><span class="line">        gImage.drawImage(image,x,y,width,height,<span class="literal">null</span>);</span><br><span class="line">        y+=speed;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.getRec().intersects(<span class="built_in">this</span>.fram.planeObj.getRec())){</span><br><span class="line">            <span class="built_in">this</span>.fram.state=<span class="number">3</span>;</span><br><span class="line">            <span class="built_in">this</span>.fram.repaint();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (y&gt;<span class="number">600</span>){</span><br><span class="line">            <span class="built_in">this</span>.x=-<span class="number">300</span>;</span><br><span class="line">            <span class="built_in">this</span>.y=-<span class="number">300</span>;</span><br><span class="line">            GameUtils.removeObjList.add(<span class="built_in">this</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Rectangle <span class="title function_">getRec</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getRec();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="8"><li>敌方的爆炸效果</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> utils.GameUtils;</span><br><span class="line"><span class="keyword">import</span> utils.GameWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExplodeObj</span> <span class="keyword">extends</span> <span class="title class_">GameObject</span> {</span><br><span class="line">    <span class="comment">//调用的帧数</span></span><br><span class="line">    <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    Image explode=Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/boom.gif"</span>);</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Image <span class="title function_">getImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExplodeObj</span><span class="params">(Image image, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWindow fram)</span> {</span><br><span class="line">        <span class="built_in">super</span>(image, x, y, width, height, speed, fram);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExplodeObj</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> {</span><br><span class="line">        <span class="built_in">super</span>(x, y);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExplodeObj</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExplodeObj</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height)</span> {</span><br><span class="line">        <span class="built_in">super</span>(x, y, width, height);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span> {</span><br><span class="line">        <span class="keyword">if</span> (count&lt;<span class="number">16</span>){</span><br><span class="line">            <span class="built_in">super</span>.image=explode;</span><br><span class="line">            gImage.drawImage(image,x,y,width,height,<span class="literal">null</span>);<span class="comment">//要可以设置大小</span></span><br><span class="line">            count++;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//super.paintSelf(gImage);</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Rectangle <span class="title function_">getRec</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getRec();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="9"><li>工具类</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> object.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.tools.Tool;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameUtils</span> {</span><br><span class="line">    <span class="comment">//背景图片</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Image</span> <span class="variable">bgImage</span> <span class="operator">=</span> Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/backGroup.jpg"</span>);</span><br><span class="line">    <span class="comment">//BOSS图片</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Image</span> <span class="variable">bossImage</span> <span class="operator">=</span> Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/boss.png"</span>);</span><br><span class="line">    <span class="comment">//动态爆炸图片</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Image</span> <span class="variable">boomImage</span> <span class="operator">=</span> Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/boom.gif"</span>);</span><br><span class="line">    <span class="comment">//我方飞机爆炸图片</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Image</span> <span class="variable">boom_2Image</span> <span class="operator">=</span> Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/boom2.png"</span>);</span><br><span class="line">    <span class="comment">//敌方飞机爆炸图片</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Image</span> <span class="variable">boom_3Image</span> <span class="operator">=</span> Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/boom3.png"</span>);</span><br><span class="line">    <span class="comment">//己方飞机</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Image planeImage=Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/plane2.png"</span>);</span><br><span class="line">    <span class="comment">//我方子弹</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Image shellImage=Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/shell.png"</span>);</span><br><span class="line">    <span class="comment">//敌方飞机</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Image enemyImage=Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/enemy.png"</span>);</span><br><span class="line">    <span class="comment">//敌方子弹</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Image bulletImage=Toolkit.getDefaultToolkit().getImage(<span class="string">"Images/bullet.png"</span>);</span><br><span class="line">    <span class="comment">//物体的集合</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;GameObject&gt; gameObjList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//子弹的集合</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;shellObj&gt; shellObjList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="comment">//敌方飞机集合</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;enemyObj&gt; enemyObjList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="comment">//Boss子弹的集合</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;BulletObj&gt; bulletObjList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="comment">//需要移除的目标的集合</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;GameObject&gt; removeObjList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//敌机爆炸的集合</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;ExplodeObj&gt; explodeObjList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">DrawWord</span><span class="params">(Graphics gGrafics,String word,Color color,<span class="type">int</span> size,<span class="type">int</span> x,<span class="type">int</span> y)</span>{</span><br><span class="line">        gGrafics.setColor(color);<span class="comment">//设置字体颜色</span></span><br><span class="line">        gGrafics.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">"仿宋"</span>,Font.BOLD,size));</span><br><span class="line">        gGrafics.drawString(word,x,y);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="10"><li>窗口类</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> object.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameWindow</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> {</span><br><span class="line">    <span class="comment">//0未开始，1游戏中，2暂停，3通关失败，4,通关成功</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> state=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//分数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> score=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//生成多少飞机后生成boss</span></span><br><span class="line">    <span class="type">int</span> num=<span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> width=<span class="number">600</span>;</span><br><span class="line">    <span class="type">int</span> height=<span class="number">600</span>;</span><br><span class="line">    <span class="comment">//画布重画的次数</span></span><br><span class="line">    <span class="type">int</span> count=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//敌机生成数目</span></span><br><span class="line">    <span class="type">int</span> enemy_count=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//开双缓存的图片</span></span><br><span class="line">    Image offImage=<span class="literal">null</span>;</span><br><span class="line">    <span class="comment">//背景</span></span><br><span class="line">    <span class="type">bgObj</span> <span class="variable">bgOb</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">bgObj</span>(GameUtils.bgImage,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="comment">//玩家飞机</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">Plane</span> <span class="variable">planeObj</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Plane</span>(GameUtils.planeImage,<span class="number">100</span>,<span class="number">100</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">0</span>,<span class="built_in">this</span>);</span><br><span class="line">    <span class="comment">//Boss</span></span><br><span class="line">    <span class="keyword">public</span> BossObj bossObj=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Start</span><span class="params">()</span>{</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setSize(width,height);<span class="comment">//大小</span></span><br><span class="line">        <span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);<span class="comment">//设置在屏幕中间</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">"飞机大战之Boss决战篇"</span>);</span><br><span class="line">        <span class="comment">//关掉后清理缓存</span></span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="comment">//添加一个监听器MouseAdapter,然后重写他的方法</span></span><br><span class="line">        <span class="built_in">this</span>.addMouseListener(<span class="keyword">new</span> <span class="title class_">MouseAdapter</span>(){</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mouseClicked</span><span class="params">(MouseEvent e)</span> {</span><br><span class="line">                <span class="keyword">if</span> (e.getButton()==<span class="number">1</span>&amp;&amp;state==<span class="number">0</span>){</span><br><span class="line">                    state=<span class="number">1</span>;</span><br><span class="line">                    repaint();</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">        <span class="comment">//添加一个键盘的监听事件</span></span><br><span class="line">        <span class="built_in">this</span>.addKeyListener(<span class="keyword">new</span> <span class="title class_">KeyAdapter</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">keyPressed</span><span class="params">(KeyEvent e)</span> {</span><br><span class="line">                <span class="keyword">if</span> (e.getKeyCode()==<span class="string">' '</span>){<span class="comment">//按下空格就暂停，暂停就相当于不再重画画布</span></span><br><span class="line">                    <span class="keyword">switch</span> (state){</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                            state=<span class="number">2</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                            state=<span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">default</span>:</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">        GameUtils.gameObjList.add(bgOb);</span><br><span class="line">        GameUtils.gameObjList.add(planeObj);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>){</span><br><span class="line">            <span class="keyword">if</span> (state==<span class="number">1</span>||state==<span class="number">0</span>){</span><br><span class="line">                <span class="keyword">if</span> (state==<span class="number">1</span>){</span><br><span class="line">                    creatGameObj();</span><br><span class="line">                }</span><br><span class="line">                repaint();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                Thread.sleep(<span class="number">25</span>);<span class="comment">//每秒调用40次</span></span><br><span class="line">            } <span class="keyword">catch</span> (InterruptedException ex) {</span><br><span class="line">                System.out.println(<span class="string">"图片解析出错，错误原因："</span>+ex.getMessage());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span> {</span><br><span class="line">        <span class="keyword">if</span> (offImage==<span class="literal">null</span>){</span><br><span class="line">            offImage=createImage(width,height) ;</span><br><span class="line">        }</span><br><span class="line">        Graphics gGraphic=offImage.getGraphics();<span class="comment">//使用两张图片用双缓存来画防止闪烁</span></span><br><span class="line">        gGraphic.fillRect(<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line">        <span class="comment">//游戏未开始时绘图</span></span><br><span class="line">        <span class="keyword">if</span> (state==<span class="number">0</span>){</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="type">MediaTracker</span> <span class="variable">mediaTracker</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MediaTracker</span>(<span class="keyword">new</span> <span class="title class_">Container</span>());</span><br><span class="line">                mediaTracker.addImage(GameUtils.bgImage, <span class="number">0</span>);</span><br><span class="line">                mediaTracker.addImage(GameUtils.bossImage, <span class="number">1</span>);</span><br><span class="line">                mediaTracker.addImage(GameUtils.boomImage, <span class="number">2</span>);</span><br><span class="line">                mediaTracker.waitForAll();</span><br><span class="line">                gGraphic.drawImage(GameUtils.bgImage,<span class="number">0</span>,<span class="number">0</span>,<span class="literal">null</span>);<span class="comment">//让图片加载完以后再显示</span></span><br><span class="line">                gGraphic.drawImage(GameUtils.bossImage,<span class="number">225</span>,<span class="number">100</span>,<span class="number">150</span>,<span class="number">150</span>,<span class="literal">null</span>);<span class="comment">//boss</span></span><br><span class="line">                gGraphic.drawImage(GameUtils.boomImage,<span class="number">250</span>,<span class="number">380</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="literal">null</span>);<span class="comment">//爆炸</span></span><br><span class="line">                GameUtils.DrawWord(gGraphic,<span class="string">"点击此处游戏开始"</span>,Color.blue,<span class="number">35</span>,<span class="number">170</span>,<span class="number">320</span>);<span class="comment">//文字标识</span></span><br><span class="line">            } <span class="keyword">catch</span> (InterruptedException ex) {</span><br><span class="line">                System.out.println(<span class="string">"图片解析出错，错误原因："</span>+ex.getMessage());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//游戏开始时绘图</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (state==<span class="number">1</span>){</span><br><span class="line">            GameUtils.gameObjList.addAll(GameUtils.explodeObjList);</span><br><span class="line">            <span class="comment">//将物件集合中所有东西画出</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;GameUtils.gameObjList.size();i++){</span><br><span class="line">                GameUtils.gameObjList.get(i).paintSelf(gGraphic);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//分数显示</span></span><br><span class="line">            GameUtils.DrawWord(gGraphic,<span class="string">"得分: "</span>+score+<span class="string">" 分"</span>,Color.green,<span class="number">30</span>,<span class="number">30</span>,<span class="number">100</span>);<span class="comment">//文字标识</span></span><br><span class="line">            <span class="comment">//将所有要移除的物件移除</span></span><br><span class="line">            GameUtils.gameObjList.removeAll(GameUtils.removeObjList);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//暂停</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (state==<span class="number">2</span>){</span><br><span class="line">            <span class="comment">//不做任何事就是暂停</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//游戏结束</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (state==<span class="number">3</span>){</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="comment">//让场景保持不变</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;GameUtils.gameObjList.size();i++){</span><br><span class="line">                    GameUtils.gameObjList.get(i).paintSelf(gGraphic);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//额外画出一些字</span></span><br><span class="line">                <span class="type">MediaTracker</span> <span class="variable">mediaTracker</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MediaTracker</span>(<span class="keyword">new</span> <span class="title class_">Container</span>());</span><br><span class="line">                mediaTracker.addImage(GameUtils.boom_2Image, <span class="number">0</span>);</span><br><span class="line">                mediaTracker.waitForID(<span class="number">0</span>);</span><br><span class="line">                gGraphic.drawImage(GameUtils.boom_2Image,planeObj.getX()-<span class="number">20</span>, planeObj.getY()-<span class="number">15</span>, <span class="literal">null</span>);<span class="comment">//爆炸</span></span><br><span class="line">                GameUtils.DrawWord(gGraphic,<span class="string">"菜"</span>,Color.red,<span class="number">80</span>,<span class="number">270</span>,<span class="number">320</span>);<span class="comment">//文字标识</span></span><br><span class="line">            } <span class="keyword">catch</span> (InterruptedException ex) {</span><br><span class="line">                System.out.println(<span class="string">"图片解析出错，错误原因："</span>+ex.getMessage());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//游戏通关</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (state==<span class="number">4</span>){</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="comment">//先让不该出现的东西消失</span></span><br><span class="line">                GameUtils.gameObjList.removeAll(GameUtils.removeObjList);</span><br><span class="line">                <span class="comment">//让场景保持不变</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;GameUtils.gameObjList.size();i++){</span><br><span class="line">                    GameUtils.gameObjList.get(i).paintSelf(gGraphic);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//额外画出一些字</span></span><br><span class="line">                <span class="type">MediaTracker</span> <span class="variable">mediaTracker</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MediaTracker</span>(<span class="keyword">new</span> <span class="title class_">Container</span>());</span><br><span class="line">                mediaTracker.addImage(GameUtils.boom_3Image, <span class="number">0</span>);</span><br><span class="line">                mediaTracker.waitForID(<span class="number">0</span>);</span><br><span class="line">                gGraphic.drawImage(GameUtils.boom_3Image,bossObj.getX()+<span class="number">30</span>, bossObj.getY(), <span class="literal">null</span>);<span class="comment">//爆炸</span></span><br><span class="line">                GameUtils.DrawWord(gGraphic,<span class="string">"虽然你赢了，但你还是菜"</span>,Color.red,<span class="number">30</span>,<span class="number">140</span>,<span class="number">320</span>);<span class="comment">//文字标识</span></span><br><span class="line">            } <span class="keyword">catch</span> (InterruptedException ex) {</span><br><span class="line">                System.out.println(<span class="string">"图片解析出错，错误原因："</span>+ex.getMessage());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        g.drawImage(offImage,<span class="number">0</span>,<span class="number">0</span>,<span class="literal">null</span>);</span><br><span class="line">        count++;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">creatGameObj</span><span class="params">()</span>{</span><br><span class="line">        <span class="comment">//我方子弹的生成</span></span><br><span class="line">        <span class="keyword">if</span> (count%<span class="number">15</span>==<span class="number">0</span>){</span><br><span class="line">            GameUtils.shellObjList.add(<span class="keyword">new</span> <span class="title class_">shellObj</span>(GameUtils.shellImage,planeObj.getX()+<span class="number">8</span>, planeObj.getY()-<span class="number">16</span>,<span class="number">14</span>,<span class="number">29</span>,<span class="number">5</span>,<span class="built_in">this</span>));</span><br><span class="line">            GameUtils.gameObjList.add(GameUtils.shellObjList.get(GameUtils.shellObjList.size()-<span class="number">1</span>));</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//敌机的生成</span></span><br><span class="line">        <span class="keyword">if</span> (count%<span class="number">15</span>==<span class="number">0</span>){</span><br><span class="line">            GameUtils.enemyObjList.add(<span class="keyword">new</span> <span class="title class_">enemyObj</span>(GameUtils.enemyImage,(<span class="type">int</span>)(Math.random()*<span class="number">12</span>)*<span class="number">50</span>, <span class="number">0</span>,<span class="number">49</span>,<span class="number">36</span>,<span class="number">5</span>,<span class="built_in">this</span>));</span><br><span class="line">            GameUtils.gameObjList.add(GameUtils.enemyObjList.get(GameUtils.enemyObjList.size()-<span class="number">1</span>));</span><br><span class="line">            enemy_count++;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//敌方子弹的生成</span></span><br><span class="line">        <span class="keyword">if</span> (bossObj!=<span class="literal">null</span>&amp;&amp;count%<span class="number">15</span>==<span class="number">0</span>){</span><br><span class="line">            GameUtils.bulletObjList.add(<span class="keyword">new</span> <span class="title class_">BulletObj</span>(GameUtils.bulletImage,bossObj.getX()+<span class="number">76</span>, bossObj.getY()+<span class="number">85</span>,<span class="number">14</span>,<span class="number">29</span>,<span class="number">5</span>,<span class="built_in">this</span>));</span><br><span class="line">            GameUtils.gameObjList.add(GameUtils.bulletObjList.get(GameUtils.bulletObjList.size()-<span class="number">1</span>));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (enemy_count&gt;num&amp;&amp;bossObj==<span class="literal">null</span>){</span><br><span class="line">            bossObj=<span class="keyword">new</span> <span class="title class_">BossObj</span>(GameUtils.bossImage,<span class="number">250</span>,<span class="number">35</span>,<span class="number">155</span>,<span class="number">100</span>,<span class="number">5</span>,<span class="built_in">this</span>);</span><br><span class="line">            GameUtils.gameObjList.add(bossObj);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol start="11"><li>主程序</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> object.*;</span><br><span class="line"><span class="keyword">import</span> utils.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PlanWarMain</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        GameWindow gWin=<span class="keyword">new</span> <span class="title class_">GameWindow</span>();</span><br><span class="line">        gWin.Start();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2></blockquote><ul><li><strong>没有长的可以循环的背景就随便弄了个背景</strong>（当然，是懒得做，诶嘿）<br><img src="https://img-blog.csdnimg.cn/1382e9a05430493a9355847d934f368a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/f6ec2ec5b5c24337ac1a4103a90ed53b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_13,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/4679114410ce4d61a88bce15e074f5a9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_14,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/781497386f044c25a698739666c6e2b1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_15,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>csharp和SqlServer数据库连接</title>
      <link href="/2022/04/15/csharp-he-sqlserver-shu-ju-ku-lian-jie/"/>
      <url>/2022/04/15/csharp-he-sqlserver-shu-ju-ku-lian-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="代码如下，请看注释"><a href="#代码如下，请看注释" class="headerlink" title="代码如下，请看注释"></a>代码如下，请看注释</h2></blockquote><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharpTest</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    {</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        {</span><br><span class="line">            Express ex = <span class="keyword">new</span> Express();</span><br><span class="line">            <span class="comment">//将Student表内加一个元组</span></span><br><span class="line">            <span class="built_in">string</span> t = <span class="string">"insert into Student values('204361128', '陈力', '男', '14', 'CS')"</span>;</span><br><span class="line">            <span class="comment">//将Student表内数据选出来</span></span><br><span class="line">            <span class="built_in">string</span> t2 = <span class="string">"select * from Student"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Console.WriteLine(ex.NonQuery(t));//更改表内数据</span></span><br><span class="line">            DataSet ds = ex.Query(t2);</span><br><span class="line">            DataTable dTab = ds.Tables[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">foreach</span> (DataColumn item <span class="keyword">in</span> dTab.Columns)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(item.ColumnName);<span class="comment">//查询表内属性</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">foreach</span> (DataRow item <span class="keyword">in</span> dTab.Rows)<span class="comment">//遍历行</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">foreach</span> (DataColumn tt <span class="keyword">in</span> dTab.Columns)<span class="comment">//把表内当前行的每个属性的值输出</span></span><br><span class="line">                {</span><br><span class="line">                    Console.Write(item[tt] + <span class="string">" "</span>);</span><br><span class="line">                }</span><br><span class="line">                Console.WriteLine();</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Express</span></span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//本地连接一个本地数据库中一个叫s204361124的数据库</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> connString = <span class="string">"Data Source=.;Initial Catalog=s204361124;Integrated Security=TRUE"</span>;</span><br><span class="line">        <span class="keyword">public</span> SqlConnection conn;</span><br><span class="line">        <span class="comment">//数据库的增删操作</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">NonQuery</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">        {</span><br><span class="line">            conn = <span class="keyword">new</span> SqlConnection(connString);</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                conn.Open();</span><br><span class="line">                SqlCommand cmd = <span class="keyword">new</span> SqlCommand(sql,conn);</span><br><span class="line">                a = cmd.ExecuteNonQuery();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span></span><br><span class="line">            {</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">finally</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (conn.State==ConnectionState.Open)</span><br><span class="line">                {</span><br><span class="line">                    Console.WriteLine(<span class="string">"有问题"</span>);</span><br><span class="line">                    conn.Close();</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//数据库的查询操作</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> DataSet <span class="title">Query</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">        {</span><br><span class="line">            conn = <span class="keyword">new</span> SqlConnection(connString);</span><br><span class="line">            DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                conn.Open();      <span class="comment">//打开数据库</span></span><br><span class="line">                SqlDataAdapter adp = <span class="keyword">new</span> SqlDataAdapter(sql, conn);</span><br><span class="line">                adp.Fill(ds);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span></span><br><span class="line">            {</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">finally</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (conn.State == ConnectionState.Open)</span><br><span class="line">                    conn.Close();      <span class="comment">//关闭数据库</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> ds;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>具体参考<a href="https://blog.csdn.net/ABC13222880223/article/details/81974120?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=DataSet&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-81974120.nonecase&amp;spm=1018.2226.3001.4187">—-&gt;此处</a></p><blockquote><h4 id="使用SqlServer连接处理二进制数据"><a href="#使用SqlServer连接处理二进制数据" class="headerlink" title="使用SqlServer连接处理二进制数据"></a>使用SqlServer连接处理二进制数据</h4><p>1.首先将要存的数据转化成二进制，再存入数据库，具体操作如下</p></blockquote><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Binary;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Connect2</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">class</span> <span class="title">DataMgr</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">public</span> SqlConnection sqlConn;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> DataMgr instance;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DataMgr</span>()</span></span><br><span class="line">        {</span><br><span class="line">            instance = <span class="keyword">this</span>;</span><br><span class="line">            Connect();</span><br><span class="line">        }</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Connect</span>()</span></span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">string</span> connStr = <span class="string">"Data Source=.;Initial Catalog=Internet;Integrated Security=TRUE"</span>;</span><br><span class="line">            sqlConn = <span class="keyword">new</span> SqlConnection(connStr);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//打开数据库</span></span><br><span class="line">                sqlConn.Open();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]Connect "</span>+e.Message);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//正则表达式判断是否符合注册标准</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsSafeStr</span>(<span class="params"><span class="built_in">string</span> str</span>)</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> !Regex.IsMatch(str, <span class="string">@"[-|;|,|\/|\(|\)|\[|\]|\}|\{|%|@|\*|!|\']"</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">CanRegister</span>(<span class="params"><span class="built_in">string</span> id</span>)</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (!IsSafeStr(id))</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">string</span> cmdStr = <span class="built_in">string</span>.Format(<span class="string">"select * from Iuser where id='{0}'"</span>,id);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                SqlDataAdapter adap = <span class="keyword">new</span> SqlDataAdapter(cmdStr,sqlConn);</span><br><span class="line">                DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">                adap.Fill(ds);</span><br><span class="line">                DataTable dTable = ds.Tables[<span class="number">0</span>]; </span><br><span class="line">                <span class="comment">//查到了数据就返回不可注册，否则就可以注册</span></span><br><span class="line">                <span class="keyword">if</span> (dTable.Rows.Count&gt;<span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]IsSafeFail "</span>+e.Message);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">Register</span>(<span class="params"><span class="built_in">string</span> id,<span class="built_in">string</span> pw</span>)</span></span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//防止sql注入，也就是非正常用户名</span></span><br><span class="line">            <span class="keyword">if</span> (!IsSafeStr(id)||!IsSafeStr(pw))</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (!CanRegister(id))</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]Registe!canRegister "</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//如果条件全部满足则允许注册角色</span></span><br><span class="line">            <span class="built_in">string</span> cmdStr = <span class="built_in">string</span>.Format(<span class="string">"insert into Iuser values('{0}','{1}')"</span>,id,pw);</span><br><span class="line">            SqlCommand sqlcmd = <span class="keyword">new</span> SqlCommand(cmdStr,sqlConn);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                sqlcmd.ExecuteNonQuery();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]Register "</span>+e.Message);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">CreatePlayer</span>(<span class="params"><span class="built_in">string</span> id</span>)</span></span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//防止sql注入</span></span><br><span class="line">            <span class="keyword">if</span> (!IsSafeStr(id))</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            IFormatter formatter=<span class="keyword">new</span> BinaryFormatter();</span><br><span class="line">            MemoryStream stream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">            PlayerData pData = <span class="keyword">new</span> PlayerData();</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                formatter.Serialize(stream,pData);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]CreatePlayer 序列化失败 "</span>+e.Message);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//将其转化的流转为字符数组</span></span><br><span class="line">            <span class="built_in">byte</span>[] bytes = stream.ToArray();</span><br><span class="line">            <span class="built_in">string</span> cmdstr = <span class="built_in">string</span>.Format(<span class="string">"insert into player values('{0}',@data)"</span>,id);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                SqlCommand sqlCmd = <span class="keyword">new</span> SqlCommand(cmdstr,sqlConn);</span><br><span class="line">                sqlCmd.Parameters.Add(<span class="string">"@data"</span>,SqlDbType.VarBinary);</span><br><span class="line">                sqlCmd.Parameters[<span class="number">0</span>].Value = bytes;</span><br><span class="line">                sqlCmd.ExecuteNonQuery();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]CreatePlayer 加入数据库 "</span>+e.Message);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">CheckPassWord</span>(<span class="params"><span class="built_in">string</span> id,<span class="built_in">string</span> pw</span>)</span></span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//防止sql注入，也就是非正常用户名</span></span><br><span class="line">            <span class="keyword">if</span> (!IsSafeStr(id) || !IsSafeStr(pw))</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//使数据库里的text类型与其兼容</span></span><br><span class="line">            <span class="built_in">string</span> cmdStr = <span class="built_in">string</span>.Format(<span class="string">"select * from Iuser where id='{0}' and cast(pw as varchar(2000))='{1}'"</span>, id,pw);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                SqlDataAdapter adap = <span class="keyword">new</span> SqlDataAdapter(cmdStr, sqlConn);</span><br><span class="line">                DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">                adap.Fill(ds);</span><br><span class="line">                DataTable dTable = ds.Tables[<span class="number">0</span>];</span><br><span class="line">                <span class="comment">//查到了数据就返回验证成功，否则就失败</span></span><br><span class="line">                <span class="keyword">if</span> (dTable.Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]CheckPasswordFail "</span> + e.Message);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PlayerData <span class="title">GetPlayerData</span>(<span class="params"><span class="built_in">string</span> id</span>)</span></span><br><span class="line">        {</span><br><span class="line">            PlayerData pData = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (!IsSafeStr(id))</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">return</span> pData;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">string</span> cmdStr = <span class="built_in">string</span>.Format(<span class="string">"select * from player where id ='{0}'"</span>, id);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                SqlDataAdapter sqlAda = <span class="keyword">new</span> SqlDataAdapter(cmdStr,sqlConn);</span><br><span class="line">                DataSet dSet = <span class="keyword">new</span> DataSet();</span><br><span class="line">                sqlAda.Fill(dSet);</span><br><span class="line">                DataTable dTable = dSet.Tables[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">if</span> (dTable.Rows.Count&lt;=<span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">return</span> pData;</span><br><span class="line">                }</span><br><span class="line">                DataRow dRow = dTable.Rows[<span class="number">0</span>];</span><br><span class="line">                <span class="built_in">int</span> len = dRow[<span class="number">1</span>].ToString().Length;</span><br><span class="line">                buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[len];</span><br><span class="line">                <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">                <span class="comment"><span class="doctag">///</span>这地方很有可能出错后面改一下</span></span><br><span class="line">                <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">                buffer = (<span class="built_in">byte</span>[])dRow[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]GetPlayerFile转化成字节数组失败 "</span>+e.Message);</span><br><span class="line">                <span class="keyword">return</span> pData;</span><br><span class="line">            }</span><br><span class="line">            MemoryStream stream = <span class="keyword">new</span> MemoryStream(buffer);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                BinaryFormatter formatter = <span class="keyword">new</span> BinaryFormatter();</span><br><span class="line">                pData = (PlayerData)formatter.Deserialize(stream);</span><br><span class="line">                <span class="keyword">return</span> pData;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]GetPlayerFile反序列化失败 "</span> + e.Message);</span><br><span class="line">                <span class="keyword">return</span> pData;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">SavePlayer</span>(<span class="params">Player player</span>)</span></span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">string</span> id = player.id;</span><br><span class="line">            PlayerData playerData = player.pData;</span><br><span class="line"></span><br><span class="line">            IFormatter formatter = <span class="keyword">new</span> BinaryFormatter();</span><br><span class="line">            MemoryStream stream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                formatter.Serialize(stream,playerData);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]SavePlayerFile序列化失败 "</span> + e.Message);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">byte</span>[] buffer = stream.ToArray();</span><br><span class="line">            <span class="built_in">string</span> cmdStr = <span class="built_in">string</span>.Format(<span class="string">"update player set playerData =@data where id = '{0}'"</span>,id);</span><br><span class="line">            SqlCommand cmd = <span class="keyword">new</span> SqlCommand(cmdStr,sqlConn);</span><br><span class="line">            cmd.Parameters.Add(<span class="string">"@data"</span>,SqlDbType.VarBinary);</span><br><span class="line">            cmd.Parameters[<span class="number">0</span>].Value = buffer;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                cmd.ExecuteNonQuery();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">                Console.WriteLine(<span class="string">"[DataMgr]SavePlayerFile保存失败 "</span> + e.Message);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
            <tag> SqlServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cSharp使用细节</title>
      <link href="/2022/04/10/csharp-shi-yong-xi-jie/"/>
      <url>/2022/04/10/csharp-shi-yong-xi-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="接口的使用细节"><a href="#接口的使用细节" class="headerlink" title="接口的使用细节"></a>接口的使用细节</h2><p>假如我要创建一个二重的接口需要以以下方法创建</p></blockquote><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IList&lt;List&lt;<span class="built_in">int</span>&gt;&gt; arrs = <span class="keyword">new</span> List&lt;List&lt;<span class="built_in">int</span>&gt;&gt;();</span><br></pre></td></tr></tbody></table></figure><p>前半部分为接口，后半部分为实例化部分，现在前半部分的接口为IList&lt;List<int>&gt;，相当于二维数组的第一层那部分为接口，里面的为实例化int型，后面要为这个接口赋值的话，也必须是IList&lt;List<int>&gt;类型，或者是List&lt;List<int>&gt;类型因为是其子类，哪怕是IList&lt;IList<int>&gt;都不行。</int></int></int></int></p><ul><li>IList&lt;T&gt;是泛型接口的基类</li><li>List&lt;T&gt;是IList&lt;T&gt;的子类，也就是实例化了的类</li><li>给IList&lt;T&gt;赋值还可以自定义一个他的子类，实现他的方法</li><li>IList&lt;IList&lt;T&gt;&gt;类型可以被List&lt;IList&lt;T&gt;&gt;实例化，其中内部那个可以是我们实例化的IList接口垫任何子类<blockquote><h2 id="二维List的输入与输出例子"><a href="#二维List的输入与输出例子" class="headerlink" title="二维List的输入与输出例子"></a>二维List的输入与输出例子</h2></blockquote></li></ul><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Test</span></span><br><span class="line">   {</span><br><span class="line">       <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">       {</span><br><span class="line">           Solution sol = <span class="keyword">new</span> Solution();</span><br><span class="line">           <span class="built_in">int</span>[] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">100005</span>];</span><br><span class="line">           <span class="built_in">string</span> t = Console.ReadLine();</span><br><span class="line">           <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">           <span class="built_in">string</span>[] a = t.Split(<span class="string">' '</span>);</span><br><span class="line">           <span class="keyword">foreach</span> (<span class="built_in">string</span> item <span class="keyword">in</span> a)</span><br><span class="line">           {</span><br><span class="line">               arr[index++] = Convert.ToInt32(item);</span><br><span class="line">           }</span><br><span class="line">           <span class="built_in">int</span>[] brr = <span class="keyword">new</span> <span class="built_in">int</span>[index];</span><br><span class="line">           Array.Copy(arr, brr, index);</span><br><span class="line">           <span class="built_in">int</span> tar = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">           IList&lt;List&lt;<span class="built_in">int</span>&gt;&gt; arrs = sol.CombinationSum(brr, tar);</span><br><span class="line">           <span class="keyword">foreach</span> (List&lt;<span class="built_in">int</span>&gt; item <span class="keyword">in</span> arrs)</span><br><span class="line">           {</span><br><span class="line">               <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> item)</span><br><span class="line">               {</span><br><span class="line">                   Console.Write(i + <span class="string">" "</span>);</span><br><span class="line">               }</span><br><span class="line">               Console.WriteLine();</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Solution</span></span><br><span class="line">   {</span><br><span class="line">       <span class="keyword">public</span> IList&lt;List&lt;<span class="built_in">int</span>&gt;&gt; CombinationSum(<span class="built_in">int</span>[] candidates, <span class="built_in">int</span> target)</span><br><span class="line">       {</span><br><span class="line">           IList&lt;List&lt;<span class="built_in">int</span>&gt;&gt; result = <span class="keyword">new</span> List&lt;List&lt;<span class="built_in">int</span>&gt;&gt;();</span><br><span class="line">           List&lt;<span class="built_in">int</span>&gt; t = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">           dfs(candidates,result,t,target,<span class="number">0</span>);</span><br><span class="line">           <span class="keyword">return</span> result;</span><br><span class="line">       }</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span>(<span class="params"><span class="built_in">int</span>[] candidates,IList&lt;List&lt;<span class="built_in">int</span>&gt;&gt; result,List&lt;<span class="built_in">int</span>&gt; t,<span class="built_in">int</span> target,<span class="built_in">int</span> index</span>)</span></span><br><span class="line">       {</span><br><span class="line">           <span class="keyword">if</span> (target==<span class="number">0</span>)</span><br><span class="line">           {</span><br><span class="line">               result.Add(<span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;(t));</span><br><span class="line">               <span class="keyword">return</span>;</span><br><span class="line">           }</span><br><span class="line">           <span class="keyword">if</span> (target &lt; <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">           <span class="keyword">for</span> (<span class="built_in">int</span> i = index; i &lt; candidates.Length; i++)</span><br><span class="line">           {</span><br><span class="line">               t.Add(candidates[i]);</span><br><span class="line">               target -= candidates[i];</span><br><span class="line">               dfs(candidates,result,t,target,i);</span><br><span class="line">               target += candidates[i];</span><br><span class="line">               t.Remove(candidates[i]);</span><br><span class="line">           }</span><br><span class="line">       }</span><br></pre></td></tr></tbody></table></figure><p>题目点这里](<a href="https://leetcode-cn.com/problems/combination-sum/">https://leetcode-cn.com/problems/combination-sum/</a>)</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cSharp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ray详解鼠标选取物品以及目标匹配</title>
      <link href="/2022/04/09/ray-xiang-jie-shu-biao-xuan-qu-wu-pin-yi-ji-mu-biao-pi-pei/"/>
      <url>/2022/04/09/ray-xiang-jie-shu-biao-xuan-qu-wu-pin-yi-ji-mu-biao-pi-pei/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="Ray"><a href="#Ray" class="headerlink" title="Ray"></a>Ray</h2></blockquote><ul><li>Ray (origin : Vector3, direction : Vector3)<br>Origin 是射线的中心<br>Direction 是射线的长度</li><li>Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition)<br>这句话的意思为创一个射线在鼠标所在位置从摄像机发送至屏幕</li><li>除了Ray还有Physics.Raycast<br>用以检测光线是否触碰到物体<br>其中API文档中有的四个</li></ul><ol><li><p>public static bool Raycast(Ray ray, RaycastHit hitInfo, float distance, int layerMask);</p></li><li><p>public static bool Raycast(Ray ray, float distance, int layerMask);</p></li><li><p>public static bool Raycast(Vector3 origin, Vector3 direction, float distance, int layerMask);</p></li><li><p>public static bool Raycast(Vector3 origin, Vector3 direction, RaycastHit , float distance ，int layerMask);</p></li></ol><p><em><strong>个人认为参数多点会更提高代码可读性</strong></em><br>除此之外还可以去vs里查看更多Raycast的重载<br><strong>注意</strong>：<em>这个layerMask一定要用LayerMask.GetMask<br>不要用LayerMask.NameToLayer去得到当前蒙版的级别<br>因为这个参数里面的Layermask是2的当前层级的次方</em></p><ul><li>RaycastHit（上一个的函数里面有一个参数是这个）<br> 这个可以提供你一个介值使用out参数传递给上面的函数在那里面使用使用完以后这个RaycastHit类型参数就有值可以使用了，可以吧有值的这个参数当做gameobject类型使用。<blockquote><h2 id="鼠标选择物体"><a href="#鼠标选择物体" class="headerlink" title="鼠标选择物体"></a>鼠标选择物体</h2></blockquote></li><li>首先放三个物体<br><img src="https://img-blog.csdnimg.cn/6947ac949f4c4f6a81476ebbb5d33cf8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>然后给他们的Layer改一下<br><img src="https://img-blog.csdnimg.cn/69dd7eff7a984a9dbf21cc19294af961.png" alt="在这里插入图片描述"></li><li>写上ray相关的代码</li></ul><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> TargetMask;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    {</span><br><span class="line">        TargetMask = LayerMask.GetMask(<span class="string">"Target"</span>);<span class="comment">//得到的</span></span><br><span class="line">        print(TargetMask);<span class="comment">//输出看看是不是得到了值</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    {</span><br><span class="line">        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);<span class="comment">//从鼠标所在位置发射射线</span></span><br><span class="line">        RaycastHit hit;<span class="comment">//设置一个被射线射到的物体</span></span><br><span class="line">        <span class="keyword">if</span> (Physics.Raycast(ray,<span class="keyword">out</span> hit,<span class="number">100.0F</span>,TargetMask))<span class="comment">//使这个射线往原定方向射100米并且只与你设置的Layer层级相撞</span></span><br><span class="line">        {</span><br><span class="line">            Vector3 offset = <span class="keyword">new</span> Vector3(<span class="number">15</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//目标物体偏移量</span></span><br><span class="line">            hit.transform.position += offset;<span class="comment">//使目标物体偏移</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><ul><li>当鼠标移至目标位置会有下图的效果<br><img src="https://img-blog.csdnimg.cn/2c5bd98893904e15872f44fc295812ce.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_11,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>如有需要可以设置成需要按什么键的时候鼠标在上面才会移动<blockquote><h2 id="目标匹配"><a href="#目标匹配" class="headerlink" title="目标匹配"></a>目标匹配</h2></blockquote></li><li>函数：</li></ul><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MatchTarget</span> (<span class="params">Vector3 matchPosition, Quaternion matchRotation, AvatarTarget targetBodyPart, MatchTargetWeightMask weightMask, <span class="built_in">float</span> startNormalizedTime,<span class="built_in">float</span> targetNormalizedTime</span>)</span></span><br></pre></td></tr></tbody></table></figure><ul><li>如何使用：<br>使你的targetBodyPart（你想要动的身体部位）在你执行的动作的开始时间startNormalizedTime到最终时间targetNormalizedTime之间，移向目标地方matchRotation,matchPosition（目标地点的位置和旋转值）并且你需要定下一个weightMask（x,y,x方向上的权重）去移动</li><li><strong>用于攀爬和移动之类，用途广泛</strong></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相对路径及根目录还有斜杠与反斜杠的区别</title>
      <link href="/2022/04/09/xiang-dui-lu-jing-ji-gen-mu-lu-huan-you-xie-gang-yu-fan-xie-gang-de-qu-bie/"/>
      <url>/2022/04/09/xiang-dui-lu-jing-ji-gen-mu-lu-huan-you-xie-gang-yu-fan-xie-gang-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="相对路径的表示"><a href="#相对路径的表示" class="headerlink" title="相对路径的表示"></a>相对路径的表示</h2></blockquote><ul><li>./表示的是当前层级</li><li>../表示的是上一级</li><li>.的个数减一就是往前几级</li><li>如果不填什么层级直接就打文件名，那么就会以根目录(即exe程序所在路径，或者为sln文件所在路径)为基准往下找，直到找到这个文件为止。</li><li>例如：<br><img src="https://img-blog.csdnimg.cn/cd42b624454346458a5539df9f7705df.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_19,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li></ul><p><em><strong>注意：这个往下只是根目录往下，当然也只有你不写层级的时候才会这么找，其他的就不行</strong></em></p><blockquote><h2 id="“-x2F-“与”-“"><a href="#“-x2F-“与”-“" class="headerlink" title="“/“与”\“"></a>“/“与”\“</h2></blockquote><ul><li>“\“在代码中这个是转义字符所以写地址的时候要写”\\“</li><li>“/“写地址是时候如果为斜杠则只用写一个</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 细节问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的使用与说明</title>
      <link href="/2022/04/09/git-de-shi-yong-yu-shuo-ming/"/>
      <url>/2022/04/09/git-de-shi-yong-yu-shuo-ming/</url>
      
        <content type="html"><![CDATA[<p>介绍Git的使用</p><h2 id="Git指令介绍"><a href="#Git指令介绍" class="headerlink" title="Git指令介绍"></a>Git指令介绍</h2><ul><li>git init （初始化仓库）</li><li>git add [.]            （全部文件加入暂存区,后面那个点改成文件名是将改文件名加入暂存）</li><li>git status   （得到当前git内部的状态）</li><li>touch ad.txt （给当前目录下增加一个叫ad的txt’文件）</li><li>git commit -m ‘此处写描述 ‘（将暂存区的文件放进本地仓库）</li><li>ls （查询当前仓库内的东西）</li><li>vi （打开文件写东西）</li><li>wp （关闭文件）</li><li>cat    ad.txt[文件名]（查看文件内容）</li><li>rm -rf ad.txt [文件名]  (删除该文件)</li><li>git rm ad.txt [文件名]  （在git中删除该文件）</li><li>git clone 仓库地址 （将此仓库地址的东西克隆到本地仓库）</li><li>git config -list （查询本地git软件内的信息。。包括个人信息和邮箱）</li><li>clear （清屏）</li><li>git config –global user.name ‘此处写github的用户名’ （初始化用户名）</li><li>git config –global user.email’此处写github的邮箱’ （初始化用户邮箱）</li><li>git remote add origin  [此处写你要上传的地址] （增加上传地址）</li><li>git push （全部上传）</li><li>git push -u origin main （将主分支上传）</li><li>git branch  （查看本地分支）</li><li>git branch -r （查看远程分支）</li><li>git branch [此处写分支名] （增加一个分支，名字自取）</li><li>git branch -d [分支名]  （删除指定分支）</li><li>git merge [分支名]  （合并指定分支到当前分支）</li><li>git ls-files （查看本地仓库内的文件）</li><li>git remote remove origin （断开远程连接）</li><li>git remote -v （查看远程仓库）</li><li>$ git push -u origin1 master （将origin1合并到master内）</li></ul><p>注意：蓝色的名字是你当前的分支<br><img src="https://img-blog.csdnimg.cn/da8d9162dea04c949b339da04137959c.png" alt="在这里插入图片描述"></p><blockquote><h2 id="Git-上传步骤"><a href="#Git-上传步骤" class="headerlink" title="Git 上传步骤"></a>Git 上传步骤</h2></blockquote><ul><li>首先把用户名和邮箱填上</li></ul><p><img src="https://img-blog.csdnimg.cn/6ffd7759d68c4824b9c015393c899cd6.png#pic_center" alt="在这里插入图片描述"></p><ul><li><p>然后获取公钥<br>使用   ssh-keygen -t rsa  指令在电脑里面.ssh 里面使用</p></li><li><p>ssh -T <a href="mailto:git@github.com">git@github.com</a></p></li><li><p>让git与github建立连接</p></li></ul><ol><li>先实例化本地仓库 使用git init</li><li>使用add 来加入暂存区</li><li>使用commit 放进仓库</li><li>使用remote 增加上传地址</li></ol><ul><li>注意格式为//不是/</li><li><img src="https://img-blog.csdnimg.cn/ffdbf26cb5ff44899f89e61bb1ba8621.png#pic_center" alt="在这里插入图片描述"></li></ul><ol start="5"><li>使用push上传</li></ol><blockquote><h2 id="GitHub-网站搭建"><a href="#GitHub-网站搭建" class="headerlink" title="GitHub 网站搭建"></a>GitHub 网站搭建</h2></blockquote><ol><li><p>在已经创建了的仓库内点击设置<br><img src="https://img-blog.csdnimg.cn/e09f3e31328842908022031cc2d0731f.png" alt="在这里插入图片描述"></p></li><li><p>进入page页面<br><img src="https://img-blog.csdnimg.cn/aba0d1078c034b7bb8fa57ee5e757962.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_9,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>点击下面按钮创建网页<img src="https://img-blog.csdnimg.cn/9d2228b86aa1436ca65c88dd6fb98d9c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>通过https://[用户名].github.io/[仓库名]/访问</p></li></ol><blockquote><h2 id="创建个人站点"><a href="#创建个人站点" class="headerlink" title="创建个人站点"></a>创建个人站点</h2></blockquote><ol><li>首先创建一个仓库（名字要为（[用户名].github.io））</li><li>在仓库里面创建一个叫index.html的文件<br>如图</li></ol><ul><li><p>创建仓库<br><img src="https://img-blog.csdnimg.cn/cafbaeebe1b546c4a4eedee19f966ab7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_17,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li><li><p>创建文件<br><img src="https://img-blog.csdnimg.cn/10e753904ba1409e853aa116d8d3a812.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5bey57uP5oCS5LiN5Y-v6YGP5LqG77yB,size_15,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p><strong>注意这个仓库里面只能有html文件</strong></p></li></ul><ol start="3"><li>通过[用户名].github.io访问</li></ol><ul><li><a href="https://www.bilibili.com/video/BV1Xx411m7kn?p=10">git的学习视频</a></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
